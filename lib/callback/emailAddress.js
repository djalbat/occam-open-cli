'use strict';

var prompt = require('../prompt'),
    validate = require('../validate'),
    messages = require('../messages');

var validateEmailAddress = validate.validateEmailAddress,
    invalidEmailAddressMessage = messages.invalidEmailAddressMessage;


function emailAddressCallback(next, done, context) {
  var emailAddress = context.emailAddress;


  if (emailAddress !== null) {
    var valid = validateEmailAddress(emailAddress);

    if (valid) {
      next();

      return;
    }
  }

  var description = 'Email address: ',
      validationFunction = validateEmailAddress,
      errorMessage = invalidEmailAddressMessage,
      attempts = 3,
      hidden = false,
      options = {
    description: description,
    validationFunction: validationFunction,
    errorMessage: errorMessage,
    attempts: attempts,
    hidden: hidden
  };

  prompt(options, function (emailAddress) {
    var valid = emailAddress !== null;

    if (valid) {
      Object.assign(context, {
        emailAddress: emailAddress
      });

      next();

      return;
    }

    done();
  });
}

module.exports = emailAddressCallback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9jYWxsYmFjay9lbWFpbEFkZHJlc3MuanMiXSwibmFtZXMiOlsicHJvbXB0IiwicmVxdWlyZSIsInZhbGlkYXRlIiwibWVzc2FnZXMiLCJ2YWxpZGF0ZUVtYWlsQWRkcmVzcyIsImludmFsaWRFbWFpbEFkZHJlc3NNZXNzYWdlIiwiZW1haWxBZGRyZXNzQ2FsbGJhY2siLCJuZXh0IiwiZG9uZSIsImNvbnRleHQiLCJlbWFpbEFkZHJlc3MiLCJ2YWxpZCIsImRlc2NyaXB0aW9uIiwidmFsaWRhdGlvbkZ1bmN0aW9uIiwiZXJyb3JNZXNzYWdlIiwiYXR0ZW1wdHMiLCJoaWRkZW4iLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsU0FBU0MsUUFBUSxXQUFSLENBQWY7QUFBQSxJQUNNQyxXQUFXRCxRQUFRLGFBQVIsQ0FEakI7QUFBQSxJQUVNRSxXQUFXRixRQUFRLGFBQVIsQ0FGakI7O0FBSU0sSUFBRUcsb0JBQUYsR0FBMkJGLFFBQTNCLENBQUVFLG9CQUFGO0FBQUEsSUFDRUMsMEJBREYsR0FDaUNGLFFBRGpDLENBQ0VFLDBCQURGOzs7QUFHTixTQUFTQyxvQkFBVCxDQUE4QkMsSUFBOUIsRUFBb0NDLElBQXBDLEVBQTBDQyxPQUExQyxFQUFtRDtBQUFBLE1BQ3pDQyxZQUR5QyxHQUN4QkQsT0FEd0IsQ0FDekNDLFlBRHlDOzs7QUFHakQsTUFBSUEsaUJBQWlCLElBQXJCLEVBQTJCO0FBQ3pCLFFBQU1DLFFBQVFQLHFCQUFxQk0sWUFBckIsQ0FBZDs7QUFFQSxRQUFJQyxLQUFKLEVBQVc7QUFDVEo7O0FBRUE7QUFDRDtBQUNGOztBQUVELE1BQU1LLGNBQWMsaUJBQXBCO0FBQUEsTUFDTUMscUJBQXFCVCxvQkFEM0I7QUFBQSxNQUVNVSxlQUFlVCwwQkFGckI7QUFBQSxNQUdNVSxXQUFXLENBSGpCO0FBQUEsTUFJTUMsU0FBUyxLQUpmO0FBQUEsTUFLTUMsVUFBVTtBQUNSTCxpQkFBYUEsV0FETDtBQUVSQyx3QkFBb0JBLGtCQUZaO0FBR1JDLGtCQUFjQSxZQUhOO0FBSVJDLGNBQVVBLFFBSkY7QUFLUkMsWUFBUUE7QUFMQSxHQUxoQjs7QUFhQWhCLFNBQU9pQixPQUFQLEVBQWdCLFVBQVNQLFlBQVQsRUFBdUI7QUFDckMsUUFBTUMsUUFBU0QsaUJBQWlCLElBQWhDOztBQUVBLFFBQUlDLEtBQUosRUFBVztBQUNUTyxhQUFPQyxNQUFQLENBQWNWLE9BQWQsRUFBdUI7QUFDckJDLHNCQUFjQTtBQURPLE9BQXZCOztBQUlBSDs7QUFFQTtBQUNEOztBQUVEQztBQUNELEdBZEQ7QUFlRDs7QUFFRFksT0FBT0MsT0FBUCxHQUFpQmYsb0JBQWpCIiwiZmlsZSI6ImVtYWlsQWRkcmVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcHJvbXB0ID0gcmVxdWlyZSgnLi4vcHJvbXB0JyksXG4gICAgICB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4uL3ZhbGlkYXRlJyksXG4gICAgICBtZXNzYWdlcyA9IHJlcXVpcmUoJy4uL21lc3NhZ2VzJyk7XG5cbmNvbnN0IHsgdmFsaWRhdGVFbWFpbEFkZHJlc3MgfSA9IHZhbGlkYXRlLFxuICAgICAgeyBpbnZhbGlkRW1haWxBZGRyZXNzTWVzc2FnZSB9ID0gbWVzc2FnZXM7XG5cbmZ1bmN0aW9uIGVtYWlsQWRkcmVzc0NhbGxiYWNrKG5leHQsIGRvbmUsIGNvbnRleHQpIHtcbiAgY29uc3QgeyBlbWFpbEFkZHJlc3MgfSA9IGNvbnRleHQ7XG4gIFxuICBpZiAoZW1haWxBZGRyZXNzICE9PSBudWxsKSB7XG4gICAgY29uc3QgdmFsaWQgPSB2YWxpZGF0ZUVtYWlsQWRkcmVzcyhlbWFpbEFkZHJlc3MpO1xuXG4gICAgaWYgKHZhbGlkKSB7XG4gICAgICBuZXh0KCk7XG4gICAgICBcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBjb25zdCBkZXNjcmlwdGlvbiA9ICdFbWFpbCBhZGRyZXNzOiAnLFxuICAgICAgICB2YWxpZGF0aW9uRnVuY3Rpb24gPSB2YWxpZGF0ZUVtYWlsQWRkcmVzcyxcbiAgICAgICAgZXJyb3JNZXNzYWdlID0gaW52YWxpZEVtYWlsQWRkcmVzc01lc3NhZ2UsXG4gICAgICAgIGF0dGVtcHRzID0gMyxcbiAgICAgICAgaGlkZGVuID0gZmFsc2UsXG4gICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICAgIHZhbGlkYXRpb25GdW5jdGlvbjogdmFsaWRhdGlvbkZ1bmN0aW9uLFxuICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyb3JNZXNzYWdlLFxuICAgICAgICAgIGF0dGVtcHRzOiBhdHRlbXB0cyxcbiAgICAgICAgICBoaWRkZW46IGhpZGRlblxuICAgICAgICB9O1xuXG4gIHByb21wdChvcHRpb25zLCBmdW5jdGlvbihlbWFpbEFkZHJlc3MpIHtcbiAgICBjb25zdCB2YWxpZCA9IChlbWFpbEFkZHJlc3MgIT09IG51bGwpO1xuXG4gICAgaWYgKHZhbGlkKSB7XG4gICAgICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgZW1haWxBZGRyZXNzOiBlbWFpbEFkZHJlc3NcbiAgICAgIH0pO1xuXG4gICAgICBuZXh0KCk7XG4gICAgICBcbiAgICAgIHJldHVybjtcbiAgICB9IFxuICAgIFxuICAgIGRvbmUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1haWxBZGRyZXNzQ2FsbGJhY2s7XG5cbiJdfQ==