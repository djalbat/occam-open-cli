'use strict';

var prompt = require('../prompt'),
    validate = require('../validate'),
    messages = require('../messages');

var validateEmailAddress = validate.validateEmailAddress,
    invalidEmailAddressMessage = messages.invalidEmailAddressMessage;


function emailAddressCallback(next, done, context) {
  var emailAddress = context.emailAddress;


  if (emailAddress !== null) {
    var valid = validateEmailAddress(emailAddress);

    if (valid) {
      next();
    }
  }

  var description = 'Email address: ',
      validationFunction = validateEmailAddress,
      errorMessage = 'The email address does not appear to be a valid one.',
      attempts = 3,
      hidden = false,
      options = {
    description: description,
    validationFunction: validationFunction,
    errorMessage: errorMessage,
    attempts: attempts,
    hidden: hidden
  };

  prompt(options, function (emailAddress) {
    var valid = emailAddress !== null;

    if (valid) {
      Object.assign(context, {
        emailAddress: emailAddress
      });

      next();
    } else {
      done();
    }
  });
}

module.exports = emailAddressCallback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9jYWxsYmFjay9lbWFpbEFkZHJlc3MuanMiXSwibmFtZXMiOlsicHJvbXB0IiwicmVxdWlyZSIsInZhbGlkYXRlIiwibWVzc2FnZXMiLCJ2YWxpZGF0ZUVtYWlsQWRkcmVzcyIsImludmFsaWRFbWFpbEFkZHJlc3NNZXNzYWdlIiwiZW1haWxBZGRyZXNzQ2FsbGJhY2siLCJuZXh0IiwiZG9uZSIsImNvbnRleHQiLCJlbWFpbEFkZHJlc3MiLCJ2YWxpZCIsImRlc2NyaXB0aW9uIiwidmFsaWRhdGlvbkZ1bmN0aW9uIiwiZXJyb3JNZXNzYWdlIiwiYXR0ZW1wdHMiLCJoaWRkZW4iLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsU0FBU0MsUUFBUSxXQUFSLENBQWY7QUFBQSxJQUNNQyxXQUFXRCxRQUFRLGFBQVIsQ0FEakI7QUFBQSxJQUVNRSxXQUFXRixRQUFRLGFBQVIsQ0FGakI7O0FBSU0sSUFBRUcsb0JBQUYsR0FBMkJGLFFBQTNCLENBQUVFLG9CQUFGO0FBQUEsSUFDRUMsMEJBREYsR0FDaUNGLFFBRGpDLENBQ0VFLDBCQURGOzs7QUFHTixTQUFTQyxvQkFBVCxDQUE4QkMsSUFBOUIsRUFBb0NDLElBQXBDLEVBQTBDQyxPQUExQyxFQUFtRDtBQUFBLE1BQ3pDQyxZQUR5QyxHQUN4QkQsT0FEd0IsQ0FDekNDLFlBRHlDOzs7QUFHakQsTUFBSUEsaUJBQWlCLElBQXJCLEVBQTJCO0FBQ3pCLFFBQU1DLFFBQVFQLHFCQUFxQk0sWUFBckIsQ0FBZDs7QUFFQSxRQUFJQyxLQUFKLEVBQVc7QUFDVEo7QUFDRDtBQUNGOztBQUVELE1BQU1LLGNBQWMsaUJBQXBCO0FBQUEsTUFDTUMscUJBQXFCVCxvQkFEM0I7QUFBQSxNQUVNVSxlQUFlLHNEQUZyQjtBQUFBLE1BR01DLFdBQVcsQ0FIakI7QUFBQSxNQUlNQyxTQUFTLEtBSmY7QUFBQSxNQUtNQyxVQUFVO0FBQ1JMLGlCQUFhQSxXQURMO0FBRVJDLHdCQUFvQkEsa0JBRlo7QUFHUkMsa0JBQWNBLFlBSE47QUFJUkMsY0FBVUEsUUFKRjtBQUtSQyxZQUFRQTtBQUxBLEdBTGhCOztBQWFBaEIsU0FBT2lCLE9BQVAsRUFBZ0IsVUFBU1AsWUFBVCxFQUF1QjtBQUNyQyxRQUFNQyxRQUFTRCxpQkFBaUIsSUFBaEM7O0FBRUEsUUFBSUMsS0FBSixFQUFXO0FBQ1RPLGFBQU9DLE1BQVAsQ0FBY1YsT0FBZCxFQUF1QjtBQUNyQkMsc0JBQWNBO0FBRE8sT0FBdkI7O0FBSUFIO0FBQ0QsS0FORCxNQU1PO0FBQ0xDO0FBQ0Q7QUFDRixHQVpEO0FBYUQ7O0FBRURZLE9BQU9DLE9BQVAsR0FBaUJmLG9CQUFqQiIsImZpbGUiOiJlbWFpbEFkZHJlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHByb21wdCA9IHJlcXVpcmUoJy4uL3Byb21wdCcpLFxuICAgICAgdmFsaWRhdGUgPSByZXF1aXJlKCcuLi92YWxpZGF0ZScpLFxuICAgICAgbWVzc2FnZXMgPSByZXF1aXJlKCcuLi9tZXNzYWdlcycpO1xuXG5jb25zdCB7IHZhbGlkYXRlRW1haWxBZGRyZXNzIH0gPSB2YWxpZGF0ZSxcbiAgICAgIHsgaW52YWxpZEVtYWlsQWRkcmVzc01lc3NhZ2UgfSA9IG1lc3NhZ2VzO1xuXG5mdW5jdGlvbiBlbWFpbEFkZHJlc3NDYWxsYmFjayhuZXh0LCBkb25lLCBjb250ZXh0KSB7XG4gIGNvbnN0IHsgZW1haWxBZGRyZXNzIH0gPSBjb250ZXh0O1xuICBcbiAgaWYgKGVtYWlsQWRkcmVzcyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHZhbGlkID0gdmFsaWRhdGVFbWFpbEFkZHJlc3MoZW1haWxBZGRyZXNzKTtcblxuICAgIGlmICh2YWxpZCkge1xuICAgICAgbmV4dCgpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGRlc2NyaXB0aW9uID0gJ0VtYWlsIGFkZHJlc3M6ICcsXG4gICAgICAgIHZhbGlkYXRpb25GdW5jdGlvbiA9IHZhbGlkYXRlRW1haWxBZGRyZXNzLFxuICAgICAgICBlcnJvck1lc3NhZ2UgPSAnVGhlIGVtYWlsIGFkZHJlc3MgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGEgdmFsaWQgb25lLicsXG4gICAgICAgIGF0dGVtcHRzID0gMyxcbiAgICAgICAgaGlkZGVuID0gZmFsc2UsXG4gICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICAgIHZhbGlkYXRpb25GdW5jdGlvbjogdmFsaWRhdGlvbkZ1bmN0aW9uLFxuICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyb3JNZXNzYWdlLFxuICAgICAgICAgIGF0dGVtcHRzOiBhdHRlbXB0cyxcbiAgICAgICAgICBoaWRkZW46IGhpZGRlblxuICAgICAgICB9O1xuXG4gIHByb21wdChvcHRpb25zLCBmdW5jdGlvbihlbWFpbEFkZHJlc3MpIHtcbiAgICBjb25zdCB2YWxpZCA9IChlbWFpbEFkZHJlc3MgIT09IG51bGwpO1xuXG4gICAgaWYgKHZhbGlkKSB7XG4gICAgICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgZW1haWxBZGRyZXNzOiBlbWFpbEFkZHJlc3NcbiAgICAgIH0pO1xuXG4gICAgICBuZXh0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRvbmUoKTtcbiAgICB9XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVtYWlsQWRkcmVzc0NhbGxiYWNrO1xuXG4iXX0=