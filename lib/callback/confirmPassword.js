'use strict';

var prompt = require('../prompt'),
    messages = require('../messages');

var passwordsDoNoMatchMessage = messages.passwordsDoNoMatchMessage;


function confirmPasswordCallback(next, done, context) {
  var password = context.password,
      description = 'Confirm password: ',
      errorMessage = passwordsDoNoMatchMessage,
      attempts = 3,
      hidden = true,
      options = {
    description: description,
    validationFunction: validationFunction,
    errorMessage: errorMessage,
    attempts: attempts,
    hidden: hidden
  };


  prompt(options, function (password) {
    var valid = password !== null;

    if (valid) {
      next();
    } else {
      done();
    }
  });

  function validationFunction(value) {
    var valid = value === password; ///

    return valid;
  }
}

module.exports = confirmPasswordCallback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9jYWxsYmFjay9jb25maXJtUGFzc3dvcmQuanMiXSwibmFtZXMiOlsicHJvbXB0IiwicmVxdWlyZSIsIm1lc3NhZ2VzIiwicGFzc3dvcmRzRG9Ob01hdGNoTWVzc2FnZSIsImNvbmZpcm1QYXNzd29yZENhbGxiYWNrIiwibmV4dCIsImRvbmUiLCJjb250ZXh0IiwicGFzc3dvcmQiLCJkZXNjcmlwdGlvbiIsImVycm9yTWVzc2FnZSIsImF0dGVtcHRzIiwiaGlkZGVuIiwib3B0aW9ucyIsInZhbGlkYXRpb25GdW5jdGlvbiIsInZhbGlkIiwidmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUFBLElBQ01DLFdBQVdELFFBQVEsYUFBUixDQURqQjs7SUFHUUUseUIsR0FBOEJELFEsQ0FBOUJDLHlCOzs7QUFFUixTQUFTQyx1QkFBVCxDQUFpQ0MsSUFBakMsRUFBdUNDLElBQXZDLEVBQTZDQyxPQUE3QyxFQUFzRDtBQUM5QyxNQUFFQyxRQUFGLEdBQWVELE9BQWYsQ0FBRUMsUUFBRjtBQUFBLE1BQ0FDLFdBREEsR0FDYyxvQkFEZDtBQUFBLE1BRUFDLFlBRkEsR0FFZVAseUJBRmY7QUFBQSxNQUdBUSxRQUhBLEdBR1csQ0FIWDtBQUFBLE1BSUFDLE1BSkEsR0FJUyxJQUpUO0FBQUEsTUFLQUMsT0FMQSxHQUtVO0FBQ1JKLGlCQUFhQSxXQURMO0FBRVJLLHdCQUFvQkEsa0JBRlo7QUFHUkosa0JBQWNBLFlBSE47QUFJUkMsY0FBVUEsUUFKRjtBQUtSQyxZQUFRQTtBQUxBLEdBTFY7OztBQWFOWixTQUFPYSxPQUFQLEVBQWdCLFVBQVNMLFFBQVQsRUFBbUI7QUFDakMsUUFBTU8sUUFBU1AsYUFBYSxJQUE1Qjs7QUFFQSxRQUFJTyxLQUFKLEVBQVc7QUFDVFY7QUFDRCxLQUZELE1BRU87QUFDTEM7QUFDRDtBQUNGLEdBUkQ7O0FBVUEsV0FBU1Esa0JBQVQsQ0FBNEJFLEtBQTVCLEVBQW1DO0FBQ2pDLFFBQU1ELFFBQVNDLFVBQVVSLFFBQXpCLENBRGlDLENBQ0c7O0FBRXBDLFdBQU9PLEtBQVA7QUFDRDtBQUNGOztBQUVERSxPQUFPQyxPQUFQLEdBQWlCZCx1QkFBakIiLCJmaWxlIjoiY29uZmlybVBhc3N3b3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwcm9tcHQgPSByZXF1aXJlKCcuLi9wcm9tcHQnKSxcbiAgICAgIG1lc3NhZ2VzID0gcmVxdWlyZSgnLi4vbWVzc2FnZXMnKTtcblxuY29uc3QgeyBwYXNzd29yZHNEb05vTWF0Y2hNZXNzYWdlIH0gPSBtZXNzYWdlcztcblxuZnVuY3Rpb24gY29uZmlybVBhc3N3b3JkQ2FsbGJhY2sobmV4dCwgZG9uZSwgY29udGV4dCkge1xuICBjb25zdCB7IHBhc3N3b3JkIH0gPSBjb250ZXh0LFxuICAgICAgICBkZXNjcmlwdGlvbiA9ICdDb25maXJtIHBhc3N3b3JkOiAnLFxuICAgICAgICBlcnJvck1lc3NhZ2UgPSBwYXNzd29yZHNEb05vTWF0Y2hNZXNzYWdlLFxuICAgICAgICBhdHRlbXB0cyA9IDMsXG4gICAgICAgIGhpZGRlbiA9IHRydWUsXG4gICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICAgIHZhbGlkYXRpb25GdW5jdGlvbjogdmFsaWRhdGlvbkZ1bmN0aW9uLFxuICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyb3JNZXNzYWdlLFxuICAgICAgICAgIGF0dGVtcHRzOiBhdHRlbXB0cyxcbiAgICAgICAgICBoaWRkZW46IGhpZGRlblxuICAgICAgICB9O1xuXG4gIHByb21wdChvcHRpb25zLCBmdW5jdGlvbihwYXNzd29yZCkge1xuICAgIGNvbnN0IHZhbGlkID0gKHBhc3N3b3JkICE9PSBudWxsKTtcblxuICAgIGlmICh2YWxpZCkge1xuICAgICAgbmV4dCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkb25lKCk7XG4gICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiB2YWxpZGF0aW9uRnVuY3Rpb24odmFsdWUpIHtcbiAgICBjb25zdCB2YWxpZCA9ICh2YWx1ZSA9PT0gcGFzc3dvcmQpOyAvLy9cblxuICAgIHJldHVybiB2YWxpZDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpcm1QYXNzd29yZENhbGxiYWNrO1xuIl19