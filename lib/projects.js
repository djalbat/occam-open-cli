'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Project = require('./project'),
    pathUtil = require('./util/path');

var Projects = function () {
  function Projects() {
    _classCallCheck(this, Projects);

    this.array = [];
  }

  _createClass(Projects, [{
    key: 'addProject',
    value: function addProject(project) {
      this.array.push(project);
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      var json = this.array.map(function (project) {
        var projectJSON = project.toJSON();

        return projectJSON;
      });

      return json;
    }
  }], [{
    key: 'fromProjectsDirectoryPath',
    value: function fromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories) {
      var projects = new Projects(),
          rootDirectoryNames = rootDirectoryNamesFromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories);

      rootDirectoryNames.forEach(function (rootDirectoryName) {
        var project = Project.fromRootDirectoryName(rootDirectoryName, projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories);

        projects.addProject(project);
      });

      return projects;
    }
  }]);

  return Projects;
}();

module.exports = Projects;

function rootDirectoryNamesFromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories) {
  var subEntryNames = pathUtil.subEntryNamesFromAbsoluteDirectoryPath(projectsDirectoryPath),
      rootDirectoryNames = subEntryNames.reduce(function (rootDirectoryNames, subEntryName) {
    var absoluteSubEntryPath = pathUtil.combinePaths(projectsDirectoryPath, subEntryName),
        absoluteSubEntryPathHiddenPath = pathUtil.isAbsolutePathHiddenPath(absoluteSubEntryPath);

    if (!doNotLoadHiddenFilesAndDirectories || !absoluteSubEntryPathHiddenPath) {
      var absoluteSubEntryPathDirectoryPath = pathUtil.isAbsolutePathDirectoryPath(absoluteSubEntryPath),
          subEntryDirectory = absoluteSubEntryPathDirectoryPath; ///

      if (subEntryDirectory) {
        var rootDirectoryName = subEntryName; ///

        rootDirectoryNames.push(rootDirectoryName);
      }
    }

    return rootDirectoryNames;
  }, []);

  return rootDirectoryNames;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9wcm9qZWN0cy5qcyJdLCJuYW1lcyI6WyJQcm9qZWN0IiwicmVxdWlyZSIsInBhdGhVdGlsIiwiUHJvamVjdHMiLCJhcnJheSIsInByb2plY3QiLCJwdXNoIiwianNvbiIsIm1hcCIsInByb2plY3RKU09OIiwidG9KU09OIiwicHJvamVjdHNEaXJlY3RvcnlQYXRoIiwiZG9Ob3RMb2FkSGlkZGVuRmlsZXNBbmREaXJlY3RvcmllcyIsInByb2plY3RzIiwicm9vdERpcmVjdG9yeU5hbWVzIiwicm9vdERpcmVjdG9yeU5hbWVzRnJvbVByb2plY3RzRGlyZWN0b3J5UGF0aCIsImZvckVhY2giLCJyb290RGlyZWN0b3J5TmFtZSIsImZyb21Sb290RGlyZWN0b3J5TmFtZSIsImFkZFByb2plY3QiLCJtb2R1bGUiLCJleHBvcnRzIiwic3ViRW50cnlOYW1lcyIsInN1YkVudHJ5TmFtZXNGcm9tQWJzb2x1dGVEaXJlY3RvcnlQYXRoIiwicmVkdWNlIiwic3ViRW50cnlOYW1lIiwiYWJzb2x1dGVTdWJFbnRyeVBhdGgiLCJjb21iaW5lUGF0aHMiLCJhYnNvbHV0ZVN1YkVudHJ5UGF0aEhpZGRlblBhdGgiLCJpc0Fic29sdXRlUGF0aEhpZGRlblBhdGgiLCJhYnNvbHV0ZVN1YkVudHJ5UGF0aERpcmVjdG9yeVBhdGgiLCJpc0Fic29sdXRlUGF0aERpcmVjdG9yeVBhdGgiLCJzdWJFbnRyeURpcmVjdG9yeSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBLElBQU1BLFVBQVVDLFFBQVEsV0FBUixDQUFoQjtBQUFBLElBQ01DLFdBQVdELFFBQVEsYUFBUixDQURqQjs7SUFHTUUsUTtBQUNKLHNCQUFjO0FBQUE7O0FBQ1osU0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDRDs7OzsrQkFFVUMsTyxFQUFTO0FBQ2xCLFdBQUtELEtBQUwsQ0FBV0UsSUFBWCxDQUFnQkQsT0FBaEI7QUFDRDs7OzZCQUVRO0FBQ1AsVUFBTUUsT0FBTyxLQUFLSCxLQUFMLENBQVdJLEdBQVgsQ0FBZSxVQUFTSCxPQUFULEVBQWtCO0FBQzVDLFlBQU1JLGNBQWNKLFFBQVFLLE1BQVIsRUFBcEI7O0FBRUEsZUFBT0QsV0FBUDtBQUNELE9BSlksQ0FBYjs7QUFNQSxhQUFPRixJQUFQO0FBQ0Q7Ozs4Q0FFZ0NJLHFCLEVBQXVCQyxrQyxFQUFvQztBQUMxRixVQUFNQyxXQUFXLElBQUlWLFFBQUosRUFBakI7QUFBQSxVQUNNVyxxQkFBcUJDLDRDQUE0Q0oscUJBQTVDLEVBQW1FQyxrQ0FBbkUsQ0FEM0I7O0FBR0FFLHlCQUFtQkUsT0FBbkIsQ0FBMkIsVUFBU0MsaUJBQVQsRUFBNEI7QUFDckQsWUFBTVosVUFBVUwsUUFBUWtCLHFCQUFSLENBQThCRCxpQkFBOUIsRUFBaUROLHFCQUFqRCxFQUF3RUMsa0NBQXhFLENBQWhCOztBQUVBQyxpQkFBU00sVUFBVCxDQUFvQmQsT0FBcEI7QUFDRCxPQUpEOztBQU1BLGFBQU9RLFFBQVA7QUFDRDs7Ozs7O0FBR0hPLE9BQU9DLE9BQVAsR0FBaUJsQixRQUFqQjs7QUFFQSxTQUFTWSwyQ0FBVCxDQUFxREoscUJBQXJELEVBQTRFQyxrQ0FBNUUsRUFBZ0g7QUFDOUcsTUFBTVUsZ0JBQWdCcEIsU0FBU3FCLHNDQUFULENBQWdEWixxQkFBaEQsQ0FBdEI7QUFBQSxNQUNNRyxxQkFBcUJRLGNBQWNFLE1BQWQsQ0FBcUIsVUFBU1Ysa0JBQVQsRUFBNkJXLFlBQTdCLEVBQTJDO0FBQ25GLFFBQU1DLHVCQUF1QnhCLFNBQVN5QixZQUFULENBQXNCaEIscUJBQXRCLEVBQTZDYyxZQUE3QyxDQUE3QjtBQUFBLFFBQ01HLGlDQUFpQzFCLFNBQVMyQix3QkFBVCxDQUFrQ0gsb0JBQWxDLENBRHZDOztBQUdBLFFBQUksQ0FBQ2Qsa0NBQUQsSUFBdUMsQ0FBQ2dCLDhCQUE1QyxFQUE0RTtBQUMxRSxVQUFNRSxvQ0FBb0M1QixTQUFTNkIsMkJBQVQsQ0FBcUNMLG9CQUFyQyxDQUExQztBQUFBLFVBQ01NLG9CQUFvQkYsaUNBRDFCLENBRDBFLENBRVo7O0FBRTlELFVBQUlFLGlCQUFKLEVBQXVCO0FBQ3JCLFlBQU1mLG9CQUFvQlEsWUFBMUIsQ0FEcUIsQ0FDb0I7O0FBRXpDWCwyQkFBbUJSLElBQW5CLENBQXdCVyxpQkFBeEI7QUFDRDtBQUNGOztBQUVELFdBQU9ILGtCQUFQO0FBQ0QsR0FoQm9CLEVBZ0JsQixFQWhCa0IsQ0FEM0I7O0FBbUJBLFNBQU9BLGtCQUFQO0FBQ0QiLCJmaWxlIjoicHJvamVjdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFByb2plY3QgPSByZXF1aXJlKCcuL3Byb2plY3QnKSxcbiAgICAgIHBhdGhVdGlsID0gcmVxdWlyZSgnLi91dGlsL3BhdGgnKTtcblxuY2xhc3MgUHJvamVjdHMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmFycmF5ID0gW107XG4gIH1cblxuICBhZGRQcm9qZWN0KHByb2plY3QpIHtcbiAgICB0aGlzLmFycmF5LnB1c2gocHJvamVjdCk7XG4gIH1cblxuICB0b0pTT04oKSB7XG4gICAgY29uc3QganNvbiA9IHRoaXMuYXJyYXkubWFwKGZ1bmN0aW9uKHByb2plY3QpIHtcbiAgICAgIGNvbnN0IHByb2plY3RKU09OID0gcHJvamVjdC50b0pTT04oKTtcblxuICAgICAgcmV0dXJuIHByb2plY3RKU09OO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGpzb247XG4gIH1cblxuICBzdGF0aWMgZnJvbVByb2plY3RzRGlyZWN0b3J5UGF0aChwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGRvTm90TG9hZEhpZGRlbkZpbGVzQW5kRGlyZWN0b3JpZXMpIHtcbiAgICBjb25zdCBwcm9qZWN0cyA9IG5ldyBQcm9qZWN0cygpLFxuICAgICAgICAgIHJvb3REaXJlY3RvcnlOYW1lcyA9IHJvb3REaXJlY3RvcnlOYW1lc0Zyb21Qcm9qZWN0c0RpcmVjdG9yeVBhdGgocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBkb05vdExvYWRIaWRkZW5GaWxlc0FuZERpcmVjdG9yaWVzKTtcblxuICAgIHJvb3REaXJlY3RvcnlOYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKHJvb3REaXJlY3RvcnlOYW1lKSB7XG4gICAgICBjb25zdCBwcm9qZWN0ID0gUHJvamVjdC5mcm9tUm9vdERpcmVjdG9yeU5hbWUocm9vdERpcmVjdG9yeU5hbWUsIHByb2plY3RzRGlyZWN0b3J5UGF0aCwgZG9Ob3RMb2FkSGlkZGVuRmlsZXNBbmREaXJlY3Rvcmllcyk7XG5cbiAgICAgIHByb2plY3RzLmFkZFByb2plY3QocHJvamVjdCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcHJvamVjdHM7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQcm9qZWN0cztcblxuZnVuY3Rpb24gcm9vdERpcmVjdG9yeU5hbWVzRnJvbVByb2plY3RzRGlyZWN0b3J5UGF0aChwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGRvTm90TG9hZEhpZGRlbkZpbGVzQW5kRGlyZWN0b3JpZXMpIHtcbiAgY29uc3Qgc3ViRW50cnlOYW1lcyA9IHBhdGhVdGlsLnN1YkVudHJ5TmFtZXNGcm9tQWJzb2x1dGVEaXJlY3RvcnlQYXRoKHByb2plY3RzRGlyZWN0b3J5UGF0aCksXG4gICAgICAgIHJvb3REaXJlY3RvcnlOYW1lcyA9IHN1YkVudHJ5TmFtZXMucmVkdWNlKGZ1bmN0aW9uKHJvb3REaXJlY3RvcnlOYW1lcywgc3ViRW50cnlOYW1lKSB7XG4gICAgICAgICAgY29uc3QgYWJzb2x1dGVTdWJFbnRyeVBhdGggPSBwYXRoVXRpbC5jb21iaW5lUGF0aHMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBzdWJFbnRyeU5hbWUpLFxuICAgICAgICAgICAgICAgIGFic29sdXRlU3ViRW50cnlQYXRoSGlkZGVuUGF0aCA9IHBhdGhVdGlsLmlzQWJzb2x1dGVQYXRoSGlkZGVuUGF0aChhYnNvbHV0ZVN1YkVudHJ5UGF0aCk7XG5cbiAgICAgICAgICBpZiAoIWRvTm90TG9hZEhpZGRlbkZpbGVzQW5kRGlyZWN0b3JpZXMgfHwgIWFic29sdXRlU3ViRW50cnlQYXRoSGlkZGVuUGF0aCkge1xuICAgICAgICAgICAgY29uc3QgYWJzb2x1dGVTdWJFbnRyeVBhdGhEaXJlY3RvcnlQYXRoID0gcGF0aFV0aWwuaXNBYnNvbHV0ZVBhdGhEaXJlY3RvcnlQYXRoKGFic29sdXRlU3ViRW50cnlQYXRoKSxcbiAgICAgICAgICAgICAgICAgIHN1YkVudHJ5RGlyZWN0b3J5ID0gYWJzb2x1dGVTdWJFbnRyeVBhdGhEaXJlY3RvcnlQYXRoOyAgLy8vXG5cbiAgICAgICAgICAgIGlmIChzdWJFbnRyeURpcmVjdG9yeSkge1xuICAgICAgICAgICAgICBjb25zdCByb290RGlyZWN0b3J5TmFtZSA9IHN1YkVudHJ5TmFtZTsgIC8vL1xuXG4gICAgICAgICAgICAgIHJvb3REaXJlY3RvcnlOYW1lcy5wdXNoKHJvb3REaXJlY3RvcnlOYW1lKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiByb290RGlyZWN0b3J5TmFtZXM7XG4gICAgICAgIH0sIFtdKTtcblxuICByZXR1cm4gcm9vdERpcmVjdG9yeU5hbWVzO1xufVxuIl19