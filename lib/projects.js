'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var necessary = require('necessary');

var Project = require('./project'),
    pathUtilities = require('./utilites/path');

var path = necessary.path,
    fileSystem = necessary.fileSystem,
    combinePaths = path.combinePaths,
    isEntryDirectory = fileSystem.isEntryDirectory,
    readDirectory = fileSystem.readDirectory;

var Projects = function () {
  function Projects() {
    _classCallCheck(this, Projects);

    this.array = [];
  }

  _createClass(Projects, [{
    key: 'addProject',
    value: function addProject(project) {
      this.array.push(project);
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      var json = this.array.map(function (project) {
        var projectJSON = project.toJSON();

        return projectJSON;
      });

      return json;
    }
  }], [{
    key: 'fromProjectsDirectoryPath',
    value: function fromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories) {
      var projects = new Projects(),
          rootDirectoryNames = rootDirectoryNamesFromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories);

      rootDirectoryNames.forEach(function (rootDirectoryName) {
        var project = Project.fromRootDirectoryName(rootDirectoryName, projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories);

        projects.addProject(project);
      });

      return projects;
    }
  }]);

  return Projects;
}();

module.exports = Projects;

function rootDirectoryNamesFromProjectsDirectoryPath(projectsDirectoryPath, doNotLoadHiddenFilesAndDirectories) {
  var subEntryNames = readDirectory(projectsDirectoryPath),
      rootDirectoryNames = subEntryNames.reduce(function (rootDirectoryNames, subEntryName) {
    var absoluteSubEntryPath = combinePaths(projectsDirectoryPath, subEntryName),
        subEntryNameHiddenName = pathUtilities.isNameHiddenName(subEntryName);

    if (!subEntryNameHiddenName || !doNotLoadHiddenFilesAndDirectories) {
      var subEntryDirectory = isEntryDirectory(absoluteSubEntryPath);

      if (subEntryDirectory) {
        var rootDirectoryName = subEntryName; ///

        rootDirectoryNames.push(rootDirectoryName);
      }
    }

    return rootDirectoryNames;
  }, []);

  return rootDirectoryNames;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9wcm9qZWN0cy5qcyJdLCJuYW1lcyI6WyJuZWNlc3NhcnkiLCJyZXF1aXJlIiwiUHJvamVjdCIsInBhdGhVdGlsaXRpZXMiLCJwYXRoIiwiZmlsZVN5c3RlbSIsImNvbWJpbmVQYXRocyIsImlzRW50cnlEaXJlY3RvcnkiLCJyZWFkRGlyZWN0b3J5IiwiUHJvamVjdHMiLCJhcnJheSIsInByb2plY3QiLCJwdXNoIiwianNvbiIsIm1hcCIsInByb2plY3RKU09OIiwidG9KU09OIiwicHJvamVjdHNEaXJlY3RvcnlQYXRoIiwiZG9Ob3RMb2FkSGlkZGVuRmlsZXNBbmREaXJlY3RvcmllcyIsInByb2plY3RzIiwicm9vdERpcmVjdG9yeU5hbWVzIiwicm9vdERpcmVjdG9yeU5hbWVzRnJvbVByb2plY3RzRGlyZWN0b3J5UGF0aCIsImZvckVhY2giLCJyb290RGlyZWN0b3J5TmFtZSIsImZyb21Sb290RGlyZWN0b3J5TmFtZSIsImFkZFByb2plY3QiLCJtb2R1bGUiLCJleHBvcnRzIiwic3ViRW50cnlOYW1lcyIsInJlZHVjZSIsInN1YkVudHJ5TmFtZSIsImFic29sdXRlU3ViRW50cnlQYXRoIiwic3ViRW50cnlOYW1lSGlkZGVuTmFtZSIsImlzTmFtZUhpZGRlbk5hbWUiLCJzdWJFbnRyeURpcmVjdG9yeSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBLElBQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7QUFFQSxJQUFNQyxVQUFVRCxRQUFRLFdBQVIsQ0FBaEI7QUFBQSxJQUNNRSxnQkFBZ0JGLFFBQVEsaUJBQVIsQ0FEdEI7O0lBR1FHLEksR0FBcUJKLFMsQ0FBckJJLEk7SUFBTUMsVSxHQUFlTCxTLENBQWZLLFU7SUFDTkMsWSxHQUFpQkYsSSxDQUFqQkUsWTtJQUNBQyxnQixHQUFvQ0YsVSxDQUFwQ0UsZ0I7SUFBa0JDLGEsR0FBa0JILFUsQ0FBbEJHLGE7O0lBRXBCQyxRO0FBQ0osc0JBQWM7QUFBQTs7QUFDWixTQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUNEOzs7OytCQUVVQyxPLEVBQVM7QUFDbEIsV0FBS0QsS0FBTCxDQUFXRSxJQUFYLENBQWdCRCxPQUFoQjtBQUNEOzs7NkJBRVE7QUFDUCxVQUFNRSxPQUFPLEtBQUtILEtBQUwsQ0FBV0ksR0FBWCxDQUFlLFVBQVNILE9BQVQsRUFBa0I7QUFDNUMsWUFBTUksY0FBY0osUUFBUUssTUFBUixFQUFwQjs7QUFFQSxlQUFPRCxXQUFQO0FBQ0QsT0FKWSxDQUFiOztBQU1BLGFBQU9GLElBQVA7QUFDRDs7OzhDQUVnQ0kscUIsRUFBdUJDLGtDLEVBQW9DO0FBQzFGLFVBQU1DLFdBQVcsSUFBSVYsUUFBSixFQUFqQjtBQUFBLFVBQ01XLHFCQUFxQkMsNENBQTRDSixxQkFBNUMsRUFBbUVDLGtDQUFuRSxDQUQzQjs7QUFHQUUseUJBQW1CRSxPQUFuQixDQUEyQixVQUFTQyxpQkFBVCxFQUE0QjtBQUNyRCxZQUFNWixVQUFVVCxRQUFRc0IscUJBQVIsQ0FBOEJELGlCQUE5QixFQUFpRE4scUJBQWpELEVBQXdFQyxrQ0FBeEUsQ0FBaEI7O0FBRUFDLGlCQUFTTSxVQUFULENBQW9CZCxPQUFwQjtBQUNELE9BSkQ7O0FBTUEsYUFBT1EsUUFBUDtBQUNEOzs7Ozs7QUFHSE8sT0FBT0MsT0FBUCxHQUFpQmxCLFFBQWpCOztBQUVBLFNBQVNZLDJDQUFULENBQXFESixxQkFBckQsRUFBNEVDLGtDQUE1RSxFQUFnSDtBQUM5RyxNQUFNVSxnQkFBZ0JwQixjQUFjUyxxQkFBZCxDQUF0QjtBQUFBLE1BQ01HLHFCQUFxQlEsY0FBY0MsTUFBZCxDQUFxQixVQUFTVCxrQkFBVCxFQUE2QlUsWUFBN0IsRUFBMkM7QUFDbkYsUUFBTUMsdUJBQXVCekIsYUFBYVcscUJBQWIsRUFBb0NhLFlBQXBDLENBQTdCO0FBQUEsUUFDTUUseUJBQXlCN0IsY0FBYzhCLGdCQUFkLENBQStCSCxZQUEvQixDQUQvQjs7QUFHQSxRQUFJLENBQUNFLHNCQUFELElBQTJCLENBQUNkLGtDQUFoQyxFQUFvRTtBQUNsRSxVQUFNZ0Isb0JBQW9CM0IsaUJBQWlCd0Isb0JBQWpCLENBQTFCOztBQUVBLFVBQUlHLGlCQUFKLEVBQXVCO0FBQ3JCLFlBQU1YLG9CQUFvQk8sWUFBMUIsQ0FEcUIsQ0FDb0I7O0FBRXpDViwyQkFBbUJSLElBQW5CLENBQXdCVyxpQkFBeEI7QUFDRDtBQUNGOztBQUVELFdBQU9ILGtCQUFQO0FBQ0QsR0Fmb0IsRUFlbEIsRUFma0IsQ0FEM0I7O0FBa0JBLFNBQU9BLGtCQUFQO0FBQ0QiLCJmaWxlIjoicHJvamVjdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IG5lY2Vzc2FyeSA9IHJlcXVpcmUoJ25lY2Vzc2FyeScpO1xuXG5jb25zdCBQcm9qZWN0ID0gcmVxdWlyZSgnLi9wcm9qZWN0JyksXG4gICAgICBwYXRoVXRpbGl0aWVzID0gcmVxdWlyZSgnLi91dGlsaXRlcy9wYXRoJyk7XG5cbmNvbnN0IHsgcGF0aCwgZmlsZVN5c3RlbSB9ID0gbmVjZXNzYXJ5LFxuICAgICAgeyBjb21iaW5lUGF0aHMgfSA9IHBhdGgsXG4gICAgICB7IGlzRW50cnlEaXJlY3RvcnksIHJlYWREaXJlY3RvcnkgfSA9IGZpbGVTeXN0ZW07XG5cbmNsYXNzIFByb2plY3RzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5hcnJheSA9IFtdO1xuICB9XG5cbiAgYWRkUHJvamVjdChwcm9qZWN0KSB7XG4gICAgdGhpcy5hcnJheS5wdXNoKHByb2plY3QpO1xuICB9XG5cbiAgdG9KU09OKCkge1xuICAgIGNvbnN0IGpzb24gPSB0aGlzLmFycmF5Lm1hcChmdW5jdGlvbihwcm9qZWN0KSB7XG4gICAgICBjb25zdCBwcm9qZWN0SlNPTiA9IHByb2plY3QudG9KU09OKCk7XG5cbiAgICAgIHJldHVybiBwcm9qZWN0SlNPTjtcbiAgICB9KTtcblxuICAgIHJldHVybiBqc29uO1xuICB9XG5cbiAgc3RhdGljIGZyb21Qcm9qZWN0c0RpcmVjdG9yeVBhdGgocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBkb05vdExvYWRIaWRkZW5GaWxlc0FuZERpcmVjdG9yaWVzKSB7XG4gICAgY29uc3QgcHJvamVjdHMgPSBuZXcgUHJvamVjdHMoKSxcbiAgICAgICAgICByb290RGlyZWN0b3J5TmFtZXMgPSByb290RGlyZWN0b3J5TmFtZXNGcm9tUHJvamVjdHNEaXJlY3RvcnlQYXRoKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgZG9Ob3RMb2FkSGlkZGVuRmlsZXNBbmREaXJlY3Rvcmllcyk7XG5cbiAgICByb290RGlyZWN0b3J5TmFtZXMuZm9yRWFjaChmdW5jdGlvbihyb290RGlyZWN0b3J5TmFtZSkge1xuICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QuZnJvbVJvb3REaXJlY3RvcnlOYW1lKHJvb3REaXJlY3RvcnlOYW1lLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGRvTm90TG9hZEhpZGRlbkZpbGVzQW5kRGlyZWN0b3JpZXMpO1xuXG4gICAgICBwcm9qZWN0cy5hZGRQcm9qZWN0KHByb2plY3QpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHByb2plY3RzO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJvamVjdHM7XG5cbmZ1bmN0aW9uIHJvb3REaXJlY3RvcnlOYW1lc0Zyb21Qcm9qZWN0c0RpcmVjdG9yeVBhdGgocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBkb05vdExvYWRIaWRkZW5GaWxlc0FuZERpcmVjdG9yaWVzKSB7XG4gIGNvbnN0IHN1YkVudHJ5TmFtZXMgPSByZWFkRGlyZWN0b3J5KHByb2plY3RzRGlyZWN0b3J5UGF0aCksXG4gICAgICAgIHJvb3REaXJlY3RvcnlOYW1lcyA9IHN1YkVudHJ5TmFtZXMucmVkdWNlKGZ1bmN0aW9uKHJvb3REaXJlY3RvcnlOYW1lcywgc3ViRW50cnlOYW1lKSB7XG4gICAgICAgICAgY29uc3QgYWJzb2x1dGVTdWJFbnRyeVBhdGggPSBjb21iaW5lUGF0aHMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBzdWJFbnRyeU5hbWUpLFxuICAgICAgICAgICAgICAgIHN1YkVudHJ5TmFtZUhpZGRlbk5hbWUgPSBwYXRoVXRpbGl0aWVzLmlzTmFtZUhpZGRlbk5hbWUoc3ViRW50cnlOYW1lKTtcblxuICAgICAgICAgIGlmICghc3ViRW50cnlOYW1lSGlkZGVuTmFtZSB8fCAhZG9Ob3RMb2FkSGlkZGVuRmlsZXNBbmREaXJlY3Rvcmllcykge1xuICAgICAgICAgICAgY29uc3Qgc3ViRW50cnlEaXJlY3RvcnkgPSBpc0VudHJ5RGlyZWN0b3J5KGFic29sdXRlU3ViRW50cnlQYXRoKTtcblxuICAgICAgICAgICAgaWYgKHN1YkVudHJ5RGlyZWN0b3J5KSB7XG4gICAgICAgICAgICAgIGNvbnN0IHJvb3REaXJlY3RvcnlOYW1lID0gc3ViRW50cnlOYW1lOyAgLy8vXG5cbiAgICAgICAgICAgICAgcm9vdERpcmVjdG9yeU5hbWVzLnB1c2gocm9vdERpcmVjdG9yeU5hbWUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHJvb3REaXJlY3RvcnlOYW1lcztcbiAgICAgICAgfSwgW10pO1xuXG4gIHJldHVybiByb290RGlyZWN0b3J5TmFtZXM7XG59XG4iXX0=