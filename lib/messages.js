"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get COMMAND_NOT_RECOGNISED_MESSAGE () {
        return COMMAND_NOT_RECOGNISED_MESSAGE;
    },
    get CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE () {
        return CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE;
    },
    get FAILED_CLONE_MESSAGE () {
        return FAILED_CLONE_MESSAGE;
    },
    get FAILED_INITIALISE_MESSAGE () {
        return FAILED_INITIALISE_MESSAGE;
    },
    get FAILED_OPEN_MESSAGE () {
        return FAILED_OPEN_MESSAGE;
    },
    get FAILED_PROJECT_LOAD_MESSAGE () {
        return FAILED_PROJECT_LOAD_MESSAGE;
    },
    get FAILED_PUBLISH_MESSAGE () {
        return FAILED_PUBLISH_MESSAGE;
    },
    get FAILED_SET_OPTIONS_MESSAGE () {
        return FAILED_SET_OPTIONS_MESSAGE;
    },
    get FAILED_SET_SHELL_COMMANDS_MESSAGE () {
        return FAILED_SET_SHELL_COMMANDS_MESSAGE;
    },
    get FAILED_WITHDRAW_MESSAGE () {
        return FAILED_WITHDRAW_MESSAGE;
    },
    get INVALID_AFFIRMATION_MESSAGE () {
        return INVALID_AFFIRMATION_MESSAGE;
    },
    get INVALID_ANSWER_MESSAGE () {
        return INVALID_ANSWER_MESSAGE;
    },
    get INVALID_EMAIL_ADDRESS_MESSAGE () {
        return INVALID_EMAIL_ADDRESS_MESSAGE;
    },
    get INVALID_EMAIL_ADDRESS_OR_USERNAME_MESSAGE () {
        return INVALID_EMAIL_ADDRESS_OR_USERNAME_MESSAGE;
    },
    get INVALID_GITHUB_HOST_NAME_MESSAGE () {
        return INVALID_GITHUB_HOST_NAME_MESSAGE;
    },
    get INVALID_PASSWORD_MESSAGE () {
        return INVALID_PASSWORD_MESSAGE;
    },
    get INVALID_RELEASE_NAME_MESSAGE () {
        return INVALID_RELEASE_NAME_MESSAGE;
    },
    get INVALID_REPOSITORY_NAME_MESSAGE () {
        return INVALID_REPOSITORY_NAME_MESSAGE;
    },
    get INVALID_USERNAME_MESSAGE () {
        return INVALID_USERNAME_MESSAGE;
    },
    get NO_ARGUMENT_GIVEN_MESSAGE () {
        return NO_ARGUMENT_GIVEN_MESSAGE;
    },
    get PASSWORDS_DO_NOT_MATCH_MESSAGE () {
        return PASSWORDS_DO_NOT_MATCH_MESSAGE;
    },
    get SERVER_FAILED_TO_RESPOND_ERROR_MESSAGE () {
        return SERVER_FAILED_TO_RESPOND_ERROR_MESSAGE;
    },
    get SIGN_OUT_MESSAGE () {
        return SIGN_OUT_MESSAGE;
    },
    get SUCCESSFUL_CLONE_MESSAGE () {
        return SUCCESSFUL_CLONE_MESSAGE;
    },
    get SUCCESSFUL_INITIALISE_MESSAGE () {
        return SUCCESSFUL_INITIALISE_MESSAGE;
    },
    get SUCCESSFUL_OPEN_MESSAGE () {
        return SUCCESSFUL_OPEN_MESSAGE;
    },
    get SUCCESSFUL_PUBLISH_MESSAGE () {
        return SUCCESSFUL_PUBLISH_MESSAGE;
    },
    get SUCCESSFUL_SET_OPTIONS_MESSAGE () {
        return SUCCESSFUL_SET_OPTIONS_MESSAGE;
    },
    get SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE () {
        return SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE;
    },
    get SUCCESSFUL_WITHDRAW_MESSAGE () {
        return SUCCESSFUL_WITHDRAW_MESSAGE;
    }
});
var NO_ARGUMENT_GIVEN_MESSAGE = "No argument has been given.";
var COMMAND_NOT_RECOGNISED_MESSAGE = "The command is not recognised.";
var PASSWORDS_DO_NOT_MATCH_MESSAGE = "The passwords do not match.";
var SERVER_FAILED_TO_RESPOND_ERROR_MESSAGE = "The server did not respond in a timely or intelligible fashion. If this problem persists then please be kind enough to report it.";
var CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE = "The action cannot be performed because the configuration file is missing. Run 'open initialise' to create one.";
var SIGN_OUT_MESSAGE = "You have been signed out.";
var INVALID_ANSWER_MESSAGE = "You must answer (y)es or (n)o.";
var INVALID_USERNAME_MESSAGE = "Usernames must consist of groups of at least two and no more than sixteen numbers or lowercase letters, separated by dashes.";
var INVALID_PASSWORD_MESSAGE = "Passwords must consist of at least eight letters, numbers or common punctuation symbols.";
var INVALID_AFFIRMATION_MESSAGE = "You must answer (y)es or (n)o.";
var INVALID_RELEASE_NAME_MESSAGE = "Package names must consist of groups of at least two and no more than sixteen numbers or lowercase letters, separated by dashes.";
var INVALID_EMAIL_ADDRESS_MESSAGE = "The email address does not appear to be a valid one.";
var INVALID_REPOSITORY_NAME_MESSAGE = "Repository names must consist of groups of at least two and no more than sixteen numbers or lowercase letters, separated by dashes.";
var INVALID_GITHUB_HOST_NAME_MESSAGE = "The GitHub host name can be any number of alphabetical, numeric, dash or period characters, or can be left blank.";
var INVALID_EMAIL_ADDRESS_OR_USERNAME_MESSAGE = "The email address or username does not appear to be a valid one.";
var FAILED_OPEN_MESSAGE = "Failed to open the package.";
var FAILED_CLONE_MESSAGE = "Failed to clone the repository.";
var FAILED_PUBLISH_MESSAGE = "Failed to publish the package.";
var FAILED_WITHDRAW_MESSAGE = "Failed to withdraw the package.";
var FAILED_INITIALISE_MESSAGE = "Failed to create a configuration file because one is already present.";
var FAILED_SET_OPTIONS_MESSAGE = "Failed to set the options.";
var FAILED_PROJECT_LOAD_MESSAGE = "Failed to load the project. Likely it is missing or perhaps it is already a package.";
var FAILED_SET_SHELL_COMMANDS_MESSAGE = "Failed to set the shell commands.";
var SUCCESSFUL_OPEN_MESSAGE = "The package has been opened successfully.";
var SUCCESSFUL_CLONE_MESSAGE = "The repository has been cloned successfully.";
var SUCCESSFUL_PUBLISH_MESSAGE = "The package has been published successfully.";
var SUCCESSFUL_WITHDRAW_MESSAGE = "The package has been withdrawn successfully.";
var SUCCESSFUL_INITIALISE_MESSAGE = "The configuration file has been created successfully.";
var SUCCESSFUL_SET_OPTIONS_MESSAGE = "The options have been set successfully.";
var SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE = "The shell commands have been set successfully.";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tZXNzYWdlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IE5PX0FSR1VNRU5UX0dJVkVOX01FU1NBR0UgPSBcIk5vIGFyZ3VtZW50IGhhcyBiZWVuIGdpdmVuLlwiO1xuZXhwb3J0IGNvbnN0IENPTU1BTkRfTk9UX1JFQ09HTklTRURfTUVTU0FHRSA9IFwiVGhlIGNvbW1hbmQgaXMgbm90IHJlY29nbmlzZWQuXCI7XG5leHBvcnQgY29uc3QgUEFTU1dPUkRTX0RPX05PVF9NQVRDSF9NRVNTQUdFID0gXCJUaGUgcGFzc3dvcmRzIGRvIG5vdCBtYXRjaC5cIjtcbmV4cG9ydCBjb25zdCBTRVJWRVJfRkFJTEVEX1RPX1JFU1BPTkRfRVJST1JfTUVTU0FHRSA9IFwiVGhlIHNlcnZlciBkaWQgbm90IHJlc3BvbmQgaW4gYSB0aW1lbHkgb3IgaW50ZWxsaWdpYmxlIGZhc2hpb24uIElmIHRoaXMgcHJvYmxlbSBwZXJzaXN0cyB0aGVuIHBsZWFzZSBiZSBraW5kIGVub3VnaCB0byByZXBvcnQgaXQuXCI7XG5leHBvcnQgY29uc3QgQ09ORklHVVJBVElPTl9GSUxFX0RPRVNfTk9UX0VYSVNUX01FU1NBR0UgPSBcIlRoZSBhY3Rpb24gY2Fubm90IGJlIHBlcmZvcm1lZCBiZWNhdXNlIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgaXMgbWlzc2luZy4gUnVuICdvcGVuIGluaXRpYWxpc2UnIHRvIGNyZWF0ZSBvbmUuXCI7XG5leHBvcnQgY29uc3QgU0lHTl9PVVRfTUVTU0FHRSA9IFwiWW91IGhhdmUgYmVlbiBzaWduZWQgb3V0LlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfQU5TV0VSX01FU1NBR0UgPSBcIllvdSBtdXN0IGFuc3dlciAoeSllcyBvciAobilvLlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfVVNFUk5BTUVfTUVTU0FHRSA9IFwiVXNlcm5hbWVzIG11c3QgY29uc2lzdCBvZiBncm91cHMgb2YgYXQgbGVhc3QgdHdvIGFuZCBubyBtb3JlIHRoYW4gc2l4dGVlbiBudW1iZXJzIG9yIGxvd2VyY2FzZSBsZXR0ZXJzLCBzZXBhcmF0ZWQgYnkgZGFzaGVzLlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUEFTU1dPUkRfTUVTU0FHRSA9IFwiUGFzc3dvcmRzIG11c3QgY29uc2lzdCBvZiBhdCBsZWFzdCBlaWdodCBsZXR0ZXJzLCBudW1iZXJzIG9yIGNvbW1vbiBwdW5jdHVhdGlvbiBzeW1ib2xzLlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfQUZGSVJNQVRJT05fTUVTU0FHRSA9IFwiWW91IG11c3QgYW5zd2VyICh5KWVzIG9yIChuKW8uXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9SRUxFQVNFX05BTUVfTUVTU0FHRSA9IFwiUGFja2FnZSBuYW1lcyBtdXN0IGNvbnNpc3Qgb2YgZ3JvdXBzIG9mIGF0IGxlYXN0IHR3byBhbmQgbm8gbW9yZSB0aGFuIHNpeHRlZW4gbnVtYmVycyBvciBsb3dlcmNhc2UgbGV0dGVycywgc2VwYXJhdGVkIGJ5IGRhc2hlcy5cIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX0VNQUlMX0FERFJFU1NfTUVTU0FHRSA9IFwiVGhlIGVtYWlsIGFkZHJlc3MgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGEgdmFsaWQgb25lLlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVQT1NJVE9SWV9OQU1FX01FU1NBR0UgPSBcIlJlcG9zaXRvcnkgbmFtZXMgbXVzdCBjb25zaXN0IG9mIGdyb3VwcyBvZiBhdCBsZWFzdCB0d28gYW5kIG5vIG1vcmUgdGhhbiBzaXh0ZWVuIG51bWJlcnMgb3IgbG93ZXJjYXNlIGxldHRlcnMsIHNlcGFyYXRlZCBieSBkYXNoZXMuXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9HSVRIVUJfSE9TVF9OQU1FX01FU1NBR0UgPSBcIlRoZSBHaXRIdWIgaG9zdCBuYW1lIGNhbiBiZSBhbnkgbnVtYmVyIG9mIGFscGhhYmV0aWNhbCwgbnVtZXJpYywgZGFzaCBvciBwZXJpb2QgY2hhcmFjdGVycywgb3IgY2FuIGJlIGxlZnQgYmxhbmsuXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9FTUFJTF9BRERSRVNTX09SX1VTRVJOQU1FX01FU1NBR0UgPSBcIlRoZSBlbWFpbCBhZGRyZXNzIG9yIHVzZXJuYW1lIGRvZXMgbm90IGFwcGVhciB0byBiZSBhIHZhbGlkIG9uZS5cIjtcbmV4cG9ydCBjb25zdCBGQUlMRURfT1BFTl9NRVNTQUdFID0gXCJGYWlsZWQgdG8gb3BlbiB0aGUgcGFja2FnZS5cIjtcbmV4cG9ydCBjb25zdCBGQUlMRURfQ0xPTkVfTUVTU0FHRSA9IFwiRmFpbGVkIHRvIGNsb25lIHRoZSByZXBvc2l0b3J5LlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9QVUJMSVNIX01FU1NBR0UgPSBcIkZhaWxlZCB0byBwdWJsaXNoIHRoZSBwYWNrYWdlLlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9XSVRIRFJBV19NRVNTQUdFID0gXCJGYWlsZWQgdG8gd2l0aGRyYXcgdGhlIHBhY2thZ2UuXCI7XG5leHBvcnQgY29uc3QgRkFJTEVEX0lOSVRJQUxJU0VfTUVTU0FHRSA9IFwiRmFpbGVkIHRvIGNyZWF0ZSBhIGNvbmZpZ3VyYXRpb24gZmlsZSBiZWNhdXNlIG9uZSBpcyBhbHJlYWR5IHByZXNlbnQuXCI7XG5leHBvcnQgY29uc3QgRkFJTEVEX1NFVF9PUFRJT05TX01FU1NBR0UgPSBcIkZhaWxlZCB0byBzZXQgdGhlIG9wdGlvbnMuXCI7XG5leHBvcnQgY29uc3QgRkFJTEVEX1BST0pFQ1RfTE9BRF9NRVNTQUdFID0gXCJGYWlsZWQgdG8gbG9hZCB0aGUgcHJvamVjdC4gTGlrZWx5IGl0IGlzIG1pc3Npbmcgb3IgcGVyaGFwcyBpdCBpcyBhbHJlYWR5IGEgcGFja2FnZS5cIjtcbmV4cG9ydCBjb25zdCBGQUlMRURfU0VUX1NIRUxMX0NPTU1BTkRTX01FU1NBR0UgPSBcIkZhaWxlZCB0byBzZXQgdGhlIHNoZWxsIGNvbW1hbmRzLlwiO1xuZXhwb3J0IGNvbnN0IFNVQ0NFU1NGVUxfT1BFTl9NRVNTQUdFID0gXCJUaGUgcGFja2FnZSBoYXMgYmVlbiBvcGVuZWQgc3VjY2Vzc2Z1bGx5LlwiO1xuZXhwb3J0IGNvbnN0IFNVQ0NFU1NGVUxfQ0xPTkVfTUVTU0FHRSA9IFwiVGhlIHJlcG9zaXRvcnkgaGFzIGJlZW4gY2xvbmVkIHN1Y2Nlc3NmdWxseS5cIjtcbmV4cG9ydCBjb25zdCBTVUNDRVNTRlVMX1BVQkxJU0hfTUVTU0FHRSA9IFwiVGhlIHBhY2thZ2UgaGFzIGJlZW4gcHVibGlzaGVkIHN1Y2Nlc3NmdWxseS5cIjtcbmV4cG9ydCBjb25zdCBTVUNDRVNTRlVMX1dJVEhEUkFXX01FU1NBR0UgPSBcIlRoZSBwYWNrYWdlIGhhcyBiZWVuIHdpdGhkcmF3biBzdWNjZXNzZnVsbHkuXCI7XG5leHBvcnQgY29uc3QgU1VDQ0VTU0ZVTF9JTklUSUFMSVNFX01FU1NBR0UgPSBcIlRoZSBjb25maWd1cmF0aW9uIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBzdWNjZXNzZnVsbHkuXCI7XG5leHBvcnQgY29uc3QgU1VDQ0VTU0ZVTF9TRVRfT1BUSU9OU19NRVNTQUdFID0gXCJUaGUgb3B0aW9ucyBoYXZlIGJlZW4gc2V0IHN1Y2Nlc3NmdWxseS5cIjtcbmV4cG9ydCBjb25zdCBTVUNDRVNTRlVMX1NFVF9TSEVMTF9DT01NQU5EU19NRVNTQUdFID0gXCJUaGUgc2hlbGwgY29tbWFuZHMgaGF2ZSBiZWVuIHNldCBzdWNjZXNzZnVsbHkuXCI7XG4iXSwibmFtZXMiOlsiQ09NTUFORF9OT1RfUkVDT0dOSVNFRF9NRVNTQUdFIiwiQ09ORklHVVJBVElPTl9GSUxFX0RPRVNfTk9UX0VYSVNUX01FU1NBR0UiLCJGQUlMRURfQ0xPTkVfTUVTU0FHRSIsIkZBSUxFRF9JTklUSUFMSVNFX01FU1NBR0UiLCJGQUlMRURfT1BFTl9NRVNTQUdFIiwiRkFJTEVEX1BST0pFQ1RfTE9BRF9NRVNTQUdFIiwiRkFJTEVEX1BVQkxJU0hfTUVTU0FHRSIsIkZBSUxFRF9TRVRfT1BUSU9OU19NRVNTQUdFIiwiRkFJTEVEX1NFVF9TSEVMTF9DT01NQU5EU19NRVNTQUdFIiwiRkFJTEVEX1dJVEhEUkFXX01FU1NBR0UiLCJJTlZBTElEX0FGRklSTUFUSU9OX01FU1NBR0UiLCJJTlZBTElEX0FOU1dFUl9NRVNTQUdFIiwiSU5WQUxJRF9FTUFJTF9BRERSRVNTX01FU1NBR0UiLCJJTlZBTElEX0VNQUlMX0FERFJFU1NfT1JfVVNFUk5BTUVfTUVTU0FHRSIsIklOVkFMSURfR0lUSFVCX0hPU1RfTkFNRV9NRVNTQUdFIiwiSU5WQUxJRF9QQVNTV09SRF9NRVNTQUdFIiwiSU5WQUxJRF9SRUxFQVNFX05BTUVfTUVTU0FHRSIsIklOVkFMSURfUkVQT1NJVE9SWV9OQU1FX01FU1NBR0UiLCJJTlZBTElEX1VTRVJOQU1FX01FU1NBR0UiLCJOT19BUkdVTUVOVF9HSVZFTl9NRVNTQUdFIiwiUEFTU1dPUkRTX0RPX05PVF9NQVRDSF9NRVNTQUdFIiwiU0VSVkVSX0ZBSUxFRF9UT19SRVNQT05EX0VSUk9SX01FU1NBR0UiLCJTSUdOX09VVF9NRVNTQUdFIiwiU1VDQ0VTU0ZVTF9DTE9ORV9NRVNTQUdFIiwiU1VDQ0VTU0ZVTF9JTklUSUFMSVNFX01FU1NBR0UiLCJTVUNDRVNTRlVMX09QRU5fTUVTU0FHRSIsIlNVQ0NFU1NGVUxfUFVCTElTSF9NRVNTQUdFIiwiU1VDQ0VTU0ZVTF9TRVRfT1BUSU9OU19NRVNTQUdFIiwiU1VDQ0VTU0ZVTF9TRVRfU0hFTExfQ09NTUFORFNfTUVTU0FHRSIsIlNVQ0NFU1NGVUxfV0lUSERSQVdfTUVTU0FHRSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O1FBR2FBO2VBQUFBOztRQUdBQztlQUFBQTs7UUFZQUM7ZUFBQUE7O1FBR0FDO2VBQUFBOztRQUpBQztlQUFBQTs7UUFNQUM7ZUFBQUE7O1FBSkFDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFFQUM7ZUFBQUE7O1FBSkFDO2VBQUFBOztRQVRBQztlQUFBQTs7UUFIQUM7ZUFBQUE7O1FBS0FDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFEQUM7ZUFBQUE7O1FBTEFDO2VBQUFBOztRQUVBQztlQUFBQTs7UUFFQUM7ZUFBQUE7O1FBTEFDO2VBQUFBOztRQVBBQztlQUFBQTs7UUFFQUM7ZUFBQUE7O1FBQ0FDO2VBQUFBOztRQUVBQztlQUFBQTs7UUFtQkFDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFKQUM7ZUFBQUE7O1FBRUFDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFDQUM7ZUFBQUE7O1FBSEFDO2VBQUFBOzs7QUExQk4sSUFBTVYsNEJBQTRCO0FBQ2xDLElBQU1uQixpQ0FBaUM7QUFDdkMsSUFBTW9CLGlDQUFpQztBQUN2QyxJQUFNQyx5Q0FBeUM7QUFDL0MsSUFBTXBCLDRDQUE0QztBQUNsRCxJQUFNcUIsbUJBQW1CO0FBQ3pCLElBQU1YLHlCQUF5QjtBQUMvQixJQUFNTywyQkFBMkI7QUFDakMsSUFBTUgsMkJBQTJCO0FBQ2pDLElBQU1MLDhCQUE4QjtBQUNwQyxJQUFNTSwrQkFBK0I7QUFDckMsSUFBTUosZ0NBQWdDO0FBQ3RDLElBQU1LLGtDQUFrQztBQUN4QyxJQUFNSCxtQ0FBbUM7QUFDekMsSUFBTUQsNENBQTRDO0FBQ2xELElBQU1ULHNCQUFzQjtBQUM1QixJQUFNRix1QkFBdUI7QUFDN0IsSUFBTUkseUJBQXlCO0FBQy9CLElBQU1HLDBCQUEwQjtBQUNoQyxJQUFNTiw0QkFBNEI7QUFDbEMsSUFBTUksNkJBQTZCO0FBQ25DLElBQU1GLDhCQUE4QjtBQUNwQyxJQUFNRyxvQ0FBb0M7QUFDMUMsSUFBTWlCLDBCQUEwQjtBQUNoQyxJQUFNRiwyQkFBMkI7QUFDakMsSUFBTUcsNkJBQTZCO0FBQ25DLElBQU1HLDhCQUE4QjtBQUNwQyxJQUFNTCxnQ0FBZ0M7QUFDdEMsSUFBTUcsaUNBQWlDO0FBQ3ZDLElBQU1DLHdDQUF3QyJ9