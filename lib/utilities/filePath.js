"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isFilePathReadmeFilePath = isFilePathReadmeFilePath;
exports.isFilePathFlorenceFilePath = isFilePathFlorenceFilePath;
exports.isFilePathMetaJSONFilePath = isFilePathMetaJSONFilePath;
exports.isFilePathRecognisedFilePath = isFilePathRecognisedFilePath;
exports.isFilePathCustomGrammarBNFFilePath = isFilePathCustomGrammarBNFFilePath;
exports.isFilePathCustomGrammarLexicalPatternFilePath = isFilePathCustomGrammarLexicalPatternFilePath;
exports.default = void 0;
var readmeFilePathPattern = "^(?:[^\\/]+\\/){1}README\\.md$", florenceFilePathPattern = "^(?:[^\\/]+\\/){1,}[^\\.]+\\.fls$", metaJSONFilePathPattern = "^(?:[^\\/]+\\/){1}meta\\.json$", customGrammarBNFFilePathPattern = "^(?:[^\\/]+\\/){1}(term|expression|statement|metastatement)\\.bnf$", customGrammarLexicalPatternFilePathPattern = "^(?:[^\\/]+\\/){1}pattern\\.lex$", recognisedFilePathPattern = "".concat(readmeFilePathPattern, "|").concat(florenceFilePathPattern, "|").concat(metaJSONFilePathPattern, "|").concat(customGrammarBNFFilePathPattern, "|").concat(customGrammarLexicalPatternFilePathPattern);
var readmeFilePathRegularExpression = new RegExp(readmeFilePathPattern), florenceFilePathRegularExpression = new RegExp(florenceFilePathPattern), metaJSONFilePathRegularExpression = new RegExp(metaJSONFilePathPattern), recognisedFilePathRegularExpression = new RegExp(recognisedFilePathPattern), customGrammarBNFFilePathRegularExpression = new RegExp(customGrammarBNFFilePathPattern), customGrammarLexicalPatternFilePathRegularExpression = new RegExp(customGrammarLexicalPatternFilePathPattern);
function isFilePathReadmeFilePath(filePath) {
    return readmeFilePathRegularExpression.test(filePath);
}
function isFilePathFlorenceFilePath(filePath) {
    return florenceFilePathRegularExpression.test(filePath);
}
function isFilePathMetaJSONFilePath(filePath) {
    return metaJSONFilePathRegularExpression.test(filePath);
}
function isFilePathRecognisedFilePath(filePath) {
    return recognisedFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarBNFFilePath(filePath) {
    return customGrammarBNFFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarLexicalPatternFilePath(filePath) {
    return customGrammarLexicalPatternFilePathRegularExpression.test(filePath);
}
var _default = {
    isFilePathReadmeFilePath: isFilePathReadmeFilePath,
    isFilePathFlorenceFilePath: isFilePathFlorenceFilePath,
    isFilePathMetaJSONFilePath: isFilePathMetaJSONFilePath,
    isFilePathRecognisedFilePath: isFilePathRecognisedFilePath,
    isFilePathCustomGrammarBNFFilePath: isFilePathCustomGrammarBNFFilePath,
    isFilePathCustomGrammarLexicalPatternFilePath: isFilePathCustomGrammarLexicalPatternFilePath
};
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZmlsZVBhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCByZWFkbWVGaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1SRUFETUVcXFxcLm1kJFwiLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUGF0dGVybiA9IFwiXig/OlteXFxcXC9dK1xcXFwvKXsxLH1bXlxcXFwuXStcXFxcLmZscyRcIixcclxuICAgICAgbWV0YUpTT05GaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1tZXRhXFxcXC5qc29uJFwiLFxyXG4gICAgICBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9KHRlcm18ZXhwcmVzc2lvbnxzdGF0ZW1lbnR8bWV0YXN0YXRlbWVudClcXFxcLmJuZiRcIixcclxuICAgICAgY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9cGF0dGVyblxcXFwubGV4JFwiLFxyXG4gICAgICByZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuID0gYCR7cmVhZG1lRmlsZVBhdGhQYXR0ZXJufXwke2Zsb3JlbmNlRmlsZVBhdGhQYXR0ZXJufXwke21ldGFKU09ORmlsZVBhdGhQYXR0ZXJufXwke2N1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm59fCR7Y3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJufWA7XHJcblxyXG5jb25zdCByZWFkbWVGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChyZWFkbWVGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKGZsb3JlbmNlRmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgbWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChtZXRhSlNPTkZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIHJlY29nbmlzZWRGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChyZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKGN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFBhdHRlcm4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVhZG1lRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhGbG9yZW5jZUZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gbWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uLnRlc3QoZmlsZVBhdGgpOyB9XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckJORkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoRmxvcmVuY2VGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoUmVjb2duaXNlZEZpbGVQYXRoLFxyXG4gIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyQk5GRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJpc0ZpbGVQYXRoUmVhZG1lRmlsZVBhdGgiLCJpc0ZpbGVQYXRoRmxvcmVuY2VGaWxlUGF0aCIsImlzRmlsZVBhdGhNZXRhSlNPTkZpbGVQYXRoIiwiaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aCIsImlzRmlsZVBhdGhDdXN0b21HcmFtbWFyQk5GRmlsZVBhdGgiLCJpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGgiLCJyZWFkbWVGaWxlUGF0aFBhdHRlcm4iLCJmbG9yZW5jZUZpbGVQYXRoUGF0dGVybiIsIm1ldGFKU09ORmlsZVBhdGhQYXR0ZXJuIiwiY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUGF0dGVybiIsImN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoUGF0dGVybiIsInJlY29nbmlzZWRGaWxlUGF0aFBhdHRlcm4iLCJyZWFkbWVGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwiUmVnRXhwIiwiZmxvcmVuY2VGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwibWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwicmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiIsImN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJmaWxlUGF0aCIsInRlc3QiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7OztRQWdCR0Esd0JBQXdCLEdBQXhCQSx3QkFBd0I7UUFFeEJDLDBCQUEwQixHQUExQkEsMEJBQTBCO1FBRTFCQywwQkFBMEIsR0FBMUJBLDBCQUEwQjtRQUUxQkMsNEJBQTRCLEdBQTVCQSw0QkFBNEI7UUFFNUJDLGtDQUFrQyxHQUFsQ0Esa0NBQWtDO1FBRWxDQyw2Q0FBNkMsR0FBN0NBLDZDQUE2Qzs7QUF4QjdELElBQU1DLHFCQUFxQixHQUFHLGdDQUFnQyxFQUN4REMsdUJBQXVCLEdBQUcsbUNBQW1DLEVBQzdEQyx1QkFBdUIsR0FBRyxnQ0FBZ0MsRUFDMURDLCtCQUErQixHQUFHLG9FQUFvRSxFQUN0R0MsMENBQTBDLEdBQUcsa0NBQWtDLEVBQy9FQyx5QkFBeUIsR0FBRyxBQUFDLEVBQUEsQ0FBMkJKLE1BQXVCLENBQWhERCxxQkFBcUIsRUFBQyxHQUFDLENBQTBCLENBQUdFLE1BQXVCLENBQWxERCx1QkFBdUIsRUFBQyxHQUFDLENBQTBCLENBQUdFLE1BQStCLENBQTFERCx1QkFBdUIsRUFBQyxHQUFDLENBQWtDLENBQUdFLE1BQTBDLENBQTdFRCwrQkFBK0IsRUFBQyxHQUFDLENBQTZDLENBQUEsTUFBQSxDQUEzQ0MsMENBQTBDLENBQUUsQUFBQztBQUVwTSxJQUFNRSwrQkFBK0IsR0FBRyxJQUFJQyxNQUFNLENBQUNQLHFCQUFxQixDQUFDLEVBQ25FUSxpQ0FBaUMsR0FBRyxJQUFJRCxNQUFNLENBQUNOLHVCQUF1QixDQUFDLEVBQ3ZFUSxpQ0FBaUMsR0FBRyxJQUFJRixNQUFNLENBQUNMLHVCQUF1QixDQUFDLEVBQ3ZFUSxtQ0FBbUMsR0FBRyxJQUFJSCxNQUFNLENBQUNGLHlCQUF5QixDQUFDLEVBQzNFTSx5Q0FBeUMsR0FBRyxJQUFJSixNQUFNLENBQUNKLCtCQUErQixDQUFDLEVBQ3ZGUyxvREFBb0QsR0FBRyxJQUFJTCxNQUFNLENBQUNILDBDQUEwQyxDQUFDLEFBQUM7QUFFN0csU0FBU1Ysd0JBQXdCLENBQUNtQixRQUFRLEVBQUU7SUFBRSxPQUFPUCwrQkFBK0IsQ0FBQ1EsSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQztDQUFFO0FBRXRHLFNBQVNsQiwwQkFBMEIsQ0FBQ2tCLFFBQVEsRUFBRTtJQUFFLE9BQU9MLGlDQUFpQyxDQUFDTSxJQUFJLENBQUNELFFBQVEsQ0FBQyxDQUFDO0NBQUU7QUFFMUcsU0FBU2pCLDBCQUEwQixDQUFDaUIsUUFBUSxFQUFFO0lBQUUsT0FBT0osaUNBQWlDLENBQUNLLElBQUksQ0FBQ0QsUUFBUSxDQUFDLENBQUM7Q0FBRTtBQUUxRyxTQUFTaEIsNEJBQTRCLENBQUNnQixRQUFRLEVBQUU7SUFBRSxPQUFPSCxtQ0FBbUMsQ0FBQ0ksSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQztDQUFFO0FBRTlHLFNBQVNmLGtDQUFrQyxDQUFDZSxRQUFRLEVBQUU7SUFBRSxPQUFPRix5Q0FBeUMsQ0FBQ0csSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQztDQUFFO0FBRTFILFNBQVNkLDZDQUE2QyxDQUFDYyxRQUFRLEVBQUU7SUFBRSxPQUFPRCxvREFBb0QsQ0FBQ0UsSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQztDQUFFO2VBRXhJO0lBQ2JuQix3QkFBd0IsRUFBeEJBLHdCQUF3QjtJQUN4QkMsMEJBQTBCLEVBQTFCQSwwQkFBMEI7SUFDMUJDLDBCQUEwQixFQUExQkEsMEJBQTBCO0lBQzFCQyw0QkFBNEIsRUFBNUJBLDRCQUE0QjtJQUM1QkMsa0NBQWtDLEVBQWxDQSxrQ0FBa0M7SUFDbENDLDZDQUE2QyxFQUE3Q0EsNkNBQTZDO0NBQzlDIn0=