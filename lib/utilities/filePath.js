'use strict';

var readmeFilePathPattern = '^(?:[^\\/]+\\/){1}README\\.md$',
    florenceFilePathPattern = '^(?:[^\\/]+\\/){1,}[^\\.]+\\.ocs$',
    metaJSONFilePathPattern = '^(?:[^\\/]+\\/){1}meta\\.json$',
    customGrammarBNFFilePathPattern = '^(?:[^\\/]+\\/){1}(term|expression|statement|metastatement)\\.bnf$',
    customGrammarLexicalPatternFilePathPattern = '^(?:[^\\/]+\\/){1}pattern\\.lex$',
    customGrammarFilePathPattern = customGrammarBNFFilePathPattern + '|' + customGrammarLexicalPatternFilePathPattern,
    recognisedFilePathPattern = readmeFilePathPattern + '|' + florenceFilePathPattern + '|' + metaJSONFilePathPattern + '|' + customGrammarBNFFilePathPattern + '|' + customGrammarLexicalPatternFilePathPattern;

var readmeFilePathRegularExpression = new RegExp(readmeFilePathPattern),
    florenceFilePathRegularExpression = new RegExp(florenceFilePathPattern),
    metaJSONFilePathRegularExpression = new RegExp(metaJSONFilePathPattern),
    recognisedFilePathRegularExpression = new RegExp(recognisedFilePathPattern),
    customGrammarFilePathRegularExpression = new RegExp(customGrammarFilePathPattern),
    customGrammarBNFFilePathRegularExpression = new RegExp(customGrammarBNFFilePathPattern),
    customGrammarLexicalPatternFilePathRegularExpression = new RegExp(customGrammarLexicalPatternFilePathPattern);

function isFilePathReadmeFilePath(filePath) {
      return readmeFilePathRegularExpression.test(filePath);
}

function isFilePathFlorenceFilePath(filePath) {
      return florenceFilePathRegularExpression.test(filePath);
}

function isFilePathMetaJSONFilePath(filePath) {
      return metaJSONFilePathRegularExpression.test(filePath);
}

function isFilePathRecognisedFilePath(filePath) {
      return recognisedFilePathRegularExpression.test(filePath);
}

function isFilePathCustomGrammarFilePath(filePath) {
      return customGrammarFilePathRegularExpression.test(filePath);
}

function isFilePathCustomGrammarBNFFilePath(filePath) {
      return customGrammarBNFFilePathRegularExpression.test(filePath);
}

function isFilePathCustomGrammarLexicalPatternFilePath(filePath) {
      return customGrammarLexicalPatternFilePathRegularExpression.test(filePath);
}

module.exports = {
      isFilePathReadmeFilePath: isFilePathReadmeFilePath,
      isFilePathFlorenceFilePath: isFilePathFlorenceFilePath,
      isFilePathMetaJSONFilePath: isFilePathMetaJSONFilePath,
      isFilePathRecognisedFilePath: isFilePathRecognisedFilePath,
      isFilePathCustomGrammarFilePath: isFilePathCustomGrammarFilePath,
      isFilePathCustomGrammarBNFFilePath: isFilePathCustomGrammarBNFFilePath,
      isFilePathCustomGrammarLexicalPatternFilePath: isFilePathCustomGrammarLexicalPatternFilePath
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvZmlsZVBhdGguanMiXSwibmFtZXMiOlsicmVhZG1lRmlsZVBhdGhQYXR0ZXJuIiwiZmxvcmVuY2VGaWxlUGF0aFBhdHRlcm4iLCJtZXRhSlNPTkZpbGVQYXRoUGF0dGVybiIsImN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm4iLCJjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFBhdHRlcm4iLCJjdXN0b21HcmFtbWFyRmlsZVBhdGhQYXR0ZXJuIiwicmVjb2duaXNlZEZpbGVQYXRoUGF0dGVybiIsInJlYWRtZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJSZWdFeHAiLCJmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJtZXRhSlNPTkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJyZWNvZ25pc2VkRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiIsImN1c3RvbUdyYW1tYXJGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwiY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwiaXNGaWxlUGF0aFJlYWRtZUZpbGVQYXRoIiwiZmlsZVBhdGgiLCJ0ZXN0IiwiaXNGaWxlUGF0aEZsb3JlbmNlRmlsZVBhdGgiLCJpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aCIsImlzRmlsZVBhdGhSZWNvZ25pc2VkRmlsZVBhdGgiLCJpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckZpbGVQYXRoIiwiaXNGaWxlUGF0aEN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aCIsImlzRmlsZVBhdGhDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLHdCQUF3QixnQ0FBOUI7QUFBQSxJQUNNQywwQkFBMEIsbUNBRGhDO0FBQUEsSUFFTUMsMEJBQTBCLGdDQUZoQztBQUFBLElBR01DLGtDQUFrQyxvRUFIeEM7QUFBQSxJQUlNQyw2Q0FBNkMsa0NBSm5EO0FBQUEsSUFLTUMsK0JBQWtDRiwrQkFBbEMsU0FBcUVDLDBDQUwzRTtBQUFBLElBTU1FLDRCQUErQk4scUJBQS9CLFNBQXdEQyx1QkFBeEQsU0FBbUZDLHVCQUFuRixTQUE4R0MsK0JBQTlHLFNBQWlKQywwQ0FOdko7O0FBUUEsSUFBTUcsa0NBQWtDLElBQUlDLE1BQUosQ0FBV1IscUJBQVgsQ0FBeEM7QUFBQSxJQUNNUyxvQ0FBb0MsSUFBSUQsTUFBSixDQUFXUCx1QkFBWCxDQUQxQztBQUFBLElBRU1TLG9DQUFvQyxJQUFJRixNQUFKLENBQVdOLHVCQUFYLENBRjFDO0FBQUEsSUFHTVMsc0NBQXNDLElBQUlILE1BQUosQ0FBV0YseUJBQVgsQ0FINUM7QUFBQSxJQUlNTSx5Q0FBeUMsSUFBSUosTUFBSixDQUFXSCw0QkFBWCxDQUovQztBQUFBLElBS01RLDRDQUE0QyxJQUFJTCxNQUFKLENBQVdMLCtCQUFYLENBTGxEO0FBQUEsSUFNTVcsdURBQXVELElBQUlOLE1BQUosQ0FBV0osMENBQVgsQ0FON0Q7O0FBUUEsU0FBU1csd0JBQVQsQ0FBa0NDLFFBQWxDLEVBQTRDO0FBQUUsYUFBT1QsZ0NBQWdDVSxJQUFoQyxDQUFxQ0QsUUFBckMsQ0FBUDtBQUF3RDs7QUFFdEcsU0FBU0UsMEJBQVQsQ0FBb0NGLFFBQXBDLEVBQThDO0FBQUUsYUFBT1Asa0NBQWtDUSxJQUFsQyxDQUF1Q0QsUUFBdkMsQ0FBUDtBQUEwRDs7QUFFMUcsU0FBU0csMEJBQVQsQ0FBb0NILFFBQXBDLEVBQThDO0FBQUUsYUFBT04sa0NBQWtDTyxJQUFsQyxDQUF1Q0QsUUFBdkMsQ0FBUDtBQUEwRDs7QUFFMUcsU0FBU0ksNEJBQVQsQ0FBc0NKLFFBQXRDLEVBQWdEO0FBQUUsYUFBT0wsb0NBQW9DTSxJQUFwQyxDQUF5Q0QsUUFBekMsQ0FBUDtBQUE0RDs7QUFFOUcsU0FBU0ssK0JBQVQsQ0FBeUNMLFFBQXpDLEVBQW1EO0FBQUUsYUFBT0osdUNBQXVDSyxJQUF2QyxDQUE0Q0QsUUFBNUMsQ0FBUDtBQUErRDs7QUFFcEgsU0FBU00sa0NBQVQsQ0FBNENOLFFBQTVDLEVBQXNEO0FBQUUsYUFBT0gsMENBQTBDSSxJQUExQyxDQUErQ0QsUUFBL0MsQ0FBUDtBQUFrRTs7QUFFMUgsU0FBU08sNkNBQVQsQ0FBdURQLFFBQXZELEVBQWlFO0FBQUUsYUFBT0YscURBQXFERyxJQUFyRCxDQUEwREQsUUFBMUQsQ0FBUDtBQUE2RTs7QUFFaEpRLE9BQU9DLE9BQVAsR0FBaUI7QUFDZlYsd0RBRGU7QUFFZkcsNERBRmU7QUFHZkMsNERBSGU7QUFJZkMsZ0VBSmU7QUFLZkMsc0VBTGU7QUFNZkMsNEVBTmU7QUFPZkM7QUFQZSxDQUFqQiIsImZpbGUiOiJmaWxlUGF0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IHJlYWRtZUZpbGVQYXRoUGF0dGVybiA9ICdeKD86W15cXFxcL10rXFxcXC8pezF9UkVBRE1FXFxcXC5tZCQnLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUGF0dGVybiA9ICdeKD86W15cXFxcL10rXFxcXC8pezEsfVteXFxcXC5dK1xcXFwub2NzJCcsXHJcbiAgICAgIG1ldGFKU09ORmlsZVBhdGhQYXR0ZXJuID0gJ14oPzpbXlxcXFwvXStcXFxcLyl7MX1tZXRhXFxcXC5qc29uJCcsXHJcbiAgICAgIGN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm4gPSAnXig/OlteXFxcXC9dK1xcXFwvKXsxfSh0ZXJtfGV4cHJlc3Npb258c3RhdGVtZW50fG1ldGFzdGF0ZW1lbnQpXFxcXC5ibmYkJyxcclxuICAgICAgY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJuID0gJ14oPzpbXlxcXFwvXStcXFxcLyl7MX1wYXR0ZXJuXFxcXC5sZXgkJyxcclxuICAgICAgY3VzdG9tR3JhbW1hckZpbGVQYXRoUGF0dGVybiA9IGAke2N1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm59fCR7Y3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJufWAsXHJcbiAgICAgIHJlY29nbmlzZWRGaWxlUGF0aFBhdHRlcm4gPSBgJHtyZWFkbWVGaWxlUGF0aFBhdHRlcm59fCR7ZmxvcmVuY2VGaWxlUGF0aFBhdHRlcm59fCR7bWV0YUpTT05GaWxlUGF0aFBhdHRlcm59fCR7Y3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUGF0dGVybn18JHtjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFBhdHRlcm59YDtcclxuXHJcbmNvbnN0IHJlYWRtZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKHJlYWRtZUZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIGZsb3JlbmNlRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoZmxvcmVuY2VGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBtZXRhSlNPTkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKG1ldGFKU09ORmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKHJlY29nbmlzZWRGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBjdXN0b21HcmFtbWFyRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoY3VzdG9tR3JhbW1hckZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIGN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJuKTtcclxuXHJcbmZ1bmN0aW9uIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVhZG1lRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZnVuY3Rpb24gaXNGaWxlUGF0aEZsb3JlbmNlRmlsZVBhdGgoZmlsZVBhdGgpIHsgcmV0dXJuIGZsb3JlbmNlRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZnVuY3Rpb24gaXNGaWxlUGF0aE1ldGFKU09ORmlsZVBhdGgoZmlsZVBhdGgpIHsgcmV0dXJuIG1ldGFKU09ORmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZnVuY3Rpb24gaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmZ1bmN0aW9uIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyRmlsZVBhdGgoZmlsZVBhdGgpIHsgcmV0dXJuIGN1c3RvbUdyYW1tYXJGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uLnRlc3QoZmlsZVBhdGgpOyB9XHJcblxyXG5mdW5jdGlvbiBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckJORkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZnVuY3Rpb24gaXNGaWxlUGF0aEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uLnRlc3QoZmlsZVBhdGgpOyB9XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBpc0ZpbGVQYXRoUmVhZG1lRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aEZsb3JlbmNlRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aE1ldGFKU09ORmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckZpbGVQYXRoLFxyXG4gIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyQk5GRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoXHJcbn07XHJcbiJdfQ==