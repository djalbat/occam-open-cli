"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isFilePathReadmeFilePath = isFilePathReadmeFilePath;
exports.isFilePathFlorenceFilePath = isFilePathFlorenceFilePath;
exports.isFilePathMetaJSONFilePath = isFilePathMetaJSONFilePath;
exports.isFilePathRecognisedFilePath = isFilePathRecognisedFilePath;
exports.isFilePathCustomGrammarBNFFilePath = isFilePathCustomGrammarBNFFilePath;
exports.isFilePathCustomGrammarLexicalPatternFilePath = isFilePathCustomGrammarLexicalPatternFilePath;
exports.default = void 0;
var readmeFilePathPattern = "^(?:[^\\/]+\\/){1}README\\.md$", florenceFilePathPattern = "^(?:[^\\/]+\\/){1,}[^\\.]+\\.fls$", metaJSONFilePathPattern = "^(?:[^\\/]+\\/){1}meta\\.json$", customGrammarBNFFilePathPattern = "^(?:[^\\/]+\\/){1}(term|expression|statement|metastatement)\\.bnf$", customGrammarLexicalPatternFilePathPattern = "^(?:[^\\/]+\\/){1}pattern\\.lex$", recognisedFilePathPattern = "".concat(readmeFilePathPattern, "|").concat(florenceFilePathPattern, "|").concat(metaJSONFilePathPattern, "|").concat(customGrammarBNFFilePathPattern, "|").concat(customGrammarLexicalPatternFilePathPattern);
var readmeFilePathRegularExpression = new RegExp(readmeFilePathPattern), florenceFilePathRegularExpression = new RegExp(florenceFilePathPattern), metaJSONFilePathRegularExpression = new RegExp(metaJSONFilePathPattern), recognisedFilePathRegularExpression = new RegExp(recognisedFilePathPattern), customGrammarBNFFilePathRegularExpression = new RegExp(customGrammarBNFFilePathPattern), customGrammarLexicalPatternFilePathRegularExpression = new RegExp(customGrammarLexicalPatternFilePathPattern);
function isFilePathReadmeFilePath(filePath) {
    return readmeFilePathRegularExpression.test(filePath);
}
function isFilePathFlorenceFilePath(filePath) {
    return florenceFilePathRegularExpression.test(filePath);
}
function isFilePathMetaJSONFilePath(filePath) {
    return metaJSONFilePathRegularExpression.test(filePath);
}
function isFilePathRecognisedFilePath(filePath) {
    return recognisedFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarBNFFilePath(filePath) {
    return customGrammarBNFFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarLexicalPatternFilePath(filePath) {
    return customGrammarLexicalPatternFilePathRegularExpression.test(filePath);
}
var _default = {
    isFilePathReadmeFilePath: isFilePathReadmeFilePath,
    isFilePathFlorenceFilePath: isFilePathFlorenceFilePath,
    isFilePathMetaJSONFilePath: isFilePathMetaJSONFilePath,
    isFilePathRecognisedFilePath: isFilePathRecognisedFilePath,
    isFilePathCustomGrammarBNFFilePath: isFilePathCustomGrammarBNFFilePath,
    isFilePathCustomGrammarLexicalPatternFilePath: isFilePathCustomGrammarLexicalPatternFilePath
};
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZmlsZVBhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCByZWFkbWVGaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1SRUFETUVcXFxcLm1kJFwiLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUGF0dGVybiA9IFwiXig/OlteXFxcXC9dK1xcXFwvKXsxLH1bXlxcXFwuXStcXFxcLmZscyRcIixcclxuICAgICAgbWV0YUpTT05GaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1tZXRhXFxcXC5qc29uJFwiLFxyXG4gICAgICBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9KHRlcm18ZXhwcmVzc2lvbnxzdGF0ZW1lbnR8bWV0YXN0YXRlbWVudClcXFxcLmJuZiRcIixcclxuICAgICAgY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9cGF0dGVyblxcXFwubGV4JFwiLFxyXG4gICAgICByZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuID0gYCR7cmVhZG1lRmlsZVBhdGhQYXR0ZXJufXwke2Zsb3JlbmNlRmlsZVBhdGhQYXR0ZXJufXwke21ldGFKU09ORmlsZVBhdGhQYXR0ZXJufXwke2N1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm59fCR7Y3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJufWA7XHJcblxyXG5jb25zdCByZWFkbWVGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChyZWFkbWVGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKGZsb3JlbmNlRmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgbWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChtZXRhSlNPTkZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIHJlY29nbmlzZWRGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChyZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKGN1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChjdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aFBhdHRlcm4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVhZG1lRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhGbG9yZW5jZUZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gbWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uLnRlc3QoZmlsZVBhdGgpOyB9XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckJORkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5GaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoRmxvcmVuY2VGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoUmVjb2duaXNlZEZpbGVQYXRoLFxyXG4gIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyQk5GRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkZpbGVQYXRoXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7O1FBZ0JJLHdCQUF3QixHQUF4Qix3QkFBd0I7UUFFeEIsMEJBQTBCLEdBQTFCLDBCQUEwQjtRQUUxQiwwQkFBMEIsR0FBMUIsMEJBQTBCO1FBRTFCLDRCQUE0QixHQUE1Qiw0QkFBNEI7UUFFNUIsa0NBQWtDLEdBQWxDLGtDQUFrQztRQUVsQyw2Q0FBNkMsR0FBN0MsNkNBQTZDOztJQXhCdkQscUJBQXFCLElBQUcsOEJBQWdDLEdBQ3hELHVCQUF1QixJQUFHLGlDQUFtQyxHQUM3RCx1QkFBdUIsSUFBRyw4QkFBZ0MsR0FDMUQsK0JBQStCLElBQUcsa0VBQW9FLEdBQ3RHLDBDQUEwQyxJQUFHLGdDQUFrQyxHQUMvRSx5QkFBeUIsTUFBK0IsTUFBdUIsQ0FBaEQscUJBQXFCLEdBQUMsQ0FBQyxHQUE2QixNQUF1QixDQUFsRCx1QkFBdUIsR0FBQyxDQUFDLEdBQTZCLE1BQStCLENBQTFELHVCQUF1QixHQUFDLENBQUMsR0FBcUMsTUFBMEMsQ0FBN0UsK0JBQStCLEdBQUMsQ0FBQyxHQUE2QyxNQUFBLENBQTNDLDBDQUEwQztJQUUzTCwrQkFBK0IsT0FBTyxNQUFNLENBQUMscUJBQXFCLEdBQ2xFLGlDQUFpQyxPQUFPLE1BQU0sQ0FBQyx1QkFBdUIsR0FDdEUsaUNBQWlDLE9BQU8sTUFBTSxDQUFDLHVCQUF1QixHQUN0RSxtQ0FBbUMsT0FBTyxNQUFNLENBQUMseUJBQXlCLEdBQzFFLHlDQUF5QyxPQUFPLE1BQU0sQ0FBQywrQkFBK0IsR0FDdEYsb0RBQW9ELE9BQU8sTUFBTSxDQUFDLDBDQUEwQztTQUVsRyx3QkFBd0IsQ0FBQyxRQUFRO1dBQVcsK0JBQStCLENBQUMsSUFBSSxDQUFDLFFBQVE7O1NBRXpGLDBCQUEwQixDQUFDLFFBQVE7V0FBVyxpQ0FBaUMsQ0FBQyxJQUFJLENBQUMsUUFBUTs7U0FFN0YsMEJBQTBCLENBQUMsUUFBUTtXQUFXLGlDQUFpQyxDQUFDLElBQUksQ0FBQyxRQUFROztTQUU3Riw0QkFBNEIsQ0FBQyxRQUFRO1dBQVcsbUNBQW1DLENBQUMsSUFBSSxDQUFDLFFBQVE7O1NBRWpHLGtDQUFrQyxDQUFDLFFBQVE7V0FBVyx5Q0FBeUMsQ0FBQyxJQUFJLENBQUMsUUFBUTs7U0FFN0csNkNBQTZDLENBQUMsUUFBUTtXQUFXLG9EQUFvRCxDQUFDLElBQUksQ0FBQyxRQUFROzs7QUFHakosNEJBQXdCLEVBQXhCLHdCQUF3QjtBQUN4Qiw4QkFBMEIsRUFBMUIsMEJBQTBCO0FBQzFCLDhCQUEwQixFQUExQiwwQkFBMEI7QUFDMUIsZ0NBQTRCLEVBQTVCLDRCQUE0QjtBQUM1QixzQ0FBa0MsRUFBbEMsa0NBQWtDO0FBQ2xDLGlEQUE2QyxFQUE3Qyw2Q0FBNkMifQ==