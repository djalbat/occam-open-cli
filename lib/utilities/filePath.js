"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    isFilePathReadmeFilePath: function() {
        return isFilePathReadmeFilePath;
    },
    isFilePathFlorenceFilePath: function() {
        return isFilePathFlorenceFilePath;
    },
    isFilePathMetaJSONFilePath: function() {
        return isFilePathMetaJSONFilePath;
    },
    isFilePathRecognisedFilePath: function() {
        return isFilePathRecognisedFilePath;
    },
    isFilePathCustomGrammarBNFFilePath: function() {
        return isFilePathCustomGrammarBNFFilePath;
    },
    isFilePathCustomGrammarPatternFilePath: function() {
        return isFilePathCustomGrammarPatternFilePath;
    },
    default: function() {
        return _default;
    }
});
var readmeFilePathPattern = "^(?:[^\\/]+\\/){1}README\\.md$", florenceFilePathPattern = "^(?:[^\\/]+\\/){1,}[^\\.]+\\.fls$", metaJSONFilePathPattern = "^(?:[^\\/]+\\/){1}meta\\.json$", customGrammarBNFFilePathPattern = "^(?:[^\\/]+\\/){1}(term|statement|metastatement)\\.bnf$", customGrammarPatternFilePathPattern = "^(?:[^\\/]+\\/){1}(type|symbol|operator)\\.ptn$", recognisedFilePathPattern = "".concat(readmeFilePathPattern, "|").concat(florenceFilePathPattern, "|").concat(metaJSONFilePathPattern, "|").concat(customGrammarBNFFilePathPattern, "|").concat(customGrammarPatternFilePathPattern);
var readmeFilePathRegularExpression = new RegExp(readmeFilePathPattern), florenceFilePathRegularExpression = new RegExp(florenceFilePathPattern), metaJSONFilePathRegularExpression = new RegExp(metaJSONFilePathPattern), recognisedFilePathRegularExpression = new RegExp(recognisedFilePathPattern), customGrammarBNFFilePathRegularExpression = new RegExp(customGrammarBNFFilePathPattern), customGrammarPatternFilePathRegularExpression = new RegExp(customGrammarPatternFilePathPattern);
function isFilePathReadmeFilePath(filePath) {
    return readmeFilePathRegularExpression.test(filePath);
}
function isFilePathFlorenceFilePath(filePath) {
    return florenceFilePathRegularExpression.test(filePath);
}
function isFilePathMetaJSONFilePath(filePath) {
    return metaJSONFilePathRegularExpression.test(filePath);
}
function isFilePathRecognisedFilePath(filePath) {
    return recognisedFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarBNFFilePath(filePath) {
    return customGrammarBNFFilePathRegularExpression.test(filePath);
}
function isFilePathCustomGrammarPatternFilePath(filePath) {
    return customGrammarPatternFilePathRegularExpression.test(filePath);
}
var _default = {
    isFilePathReadmeFilePath: isFilePathReadmeFilePath,
    isFilePathFlorenceFilePath: isFilePathFlorenceFilePath,
    isFilePathMetaJSONFilePath: isFilePathMetaJSONFilePath,
    isFilePathRecognisedFilePath: isFilePathRecognisedFilePath,
    isFilePathCustomGrammarBNFFilePath: isFilePathCustomGrammarBNFFilePath,
    isFilePathCustomGrammarPatternFilePath: isFilePathCustomGrammarPatternFilePath
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZmlsZVBhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCByZWFkbWVGaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1SRUFETUVcXFxcLm1kJFwiLFxyXG4gICAgICBmbG9yZW5jZUZpbGVQYXRoUGF0dGVybiA9IFwiXig/OlteXFxcXC9dK1xcXFwvKXsxLH1bXlxcXFwuXStcXFxcLmZscyRcIixcclxuICAgICAgbWV0YUpTT05GaWxlUGF0aFBhdHRlcm4gPSBcIl4oPzpbXlxcXFwvXStcXFxcLyl7MX1tZXRhXFxcXC5qc29uJFwiLFxyXG4gICAgICBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9KHRlcm18c3RhdGVtZW50fG1ldGFzdGF0ZW1lbnQpXFxcXC5ibmYkXCIsXHJcbiAgICAgIGN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZVBhdGhQYXR0ZXJuID0gXCJeKD86W15cXFxcL10rXFxcXC8pezF9KHR5cGV8c3ltYm9sfG9wZXJhdG9yKVxcXFwucHRuJFwiLFxyXG4gICAgICByZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuID0gYCR7cmVhZG1lRmlsZVBhdGhQYXR0ZXJufXwke2Zsb3JlbmNlRmlsZVBhdGhQYXR0ZXJufXwke21ldGFKU09ORmlsZVBhdGhQYXR0ZXJufXwke2N1c3RvbUdyYW1tYXJCTkZGaWxlUGF0aFBhdHRlcm59fCR7Y3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlUGF0aFBhdHRlcm59YDtcclxuXHJcbmNvbnN0IHJlYWRtZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKHJlYWRtZUZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIGZsb3JlbmNlRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoZmxvcmVuY2VGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBtZXRhSlNPTkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKG1ldGFKU09ORmlsZVBhdGhQYXR0ZXJuKSxcclxuICAgICAgcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24gPSBuZXcgUmVnRXhwKHJlY29nbmlzZWRGaWxlUGF0aFBhdHRlcm4pLFxyXG4gICAgICBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUGF0dGVybiksXHJcbiAgICAgIGN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiA9IG5ldyBSZWdFeHAoY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlUGF0aFBhdHRlcm4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhSZWFkbWVGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVhZG1lRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhGbG9yZW5jZUZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBmbG9yZW5jZUZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoTWV0YUpTT05GaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gbWV0YUpTT05GaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uLnRlc3QoZmlsZVBhdGgpOyB9XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aChmaWxlUGF0aCkgeyByZXR1cm4gcmVjb2duaXNlZEZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckJORkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbi50ZXN0KGZpbGVQYXRoKTsgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVQYXRoKGZpbGVQYXRoKSB7IHJldHVybiBjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24udGVzdChmaWxlUGF0aCk7IH1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBpc0ZpbGVQYXRoUmVhZG1lRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aEZsb3JlbmNlRmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aE1ldGFKU09ORmlsZVBhdGgsXHJcbiAgaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aCxcclxuICBpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hckJORkZpbGVQYXRoLFxyXG4gIGlzRmlsZVBhdGhDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVQYXRoXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJpc0ZpbGVQYXRoUmVhZG1lRmlsZVBhdGgiLCJpc0ZpbGVQYXRoRmxvcmVuY2VGaWxlUGF0aCIsImlzRmlsZVBhdGhNZXRhSlNPTkZpbGVQYXRoIiwiaXNGaWxlUGF0aFJlY29nbmlzZWRGaWxlUGF0aCIsImlzRmlsZVBhdGhDdXN0b21HcmFtbWFyQk5GRmlsZVBhdGgiLCJpc0ZpbGVQYXRoQ3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlUGF0aCIsInJlYWRtZUZpbGVQYXRoUGF0dGVybiIsImZsb3JlbmNlRmlsZVBhdGhQYXR0ZXJuIiwibWV0YUpTT05GaWxlUGF0aFBhdHRlcm4iLCJjdXN0b21HcmFtbWFyQk5GRmlsZVBhdGhQYXR0ZXJuIiwiY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlUGF0aFBhdHRlcm4iLCJyZWNvZ25pc2VkRmlsZVBhdGhQYXR0ZXJuIiwicmVhZG1lRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiIsIlJlZ0V4cCIsImZsb3JlbmNlRmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiIsIm1ldGFKU09ORmlsZVBhdGhSZWd1bGFyRXhwcmVzc2lvbiIsInJlY29nbmlzZWRGaWxlUGF0aFJlZ3VsYXJFeHByZXNzaW9uIiwiY3VzdG9tR3JhbW1hckJORkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVQYXRoUmVndWxhckV4cHJlc3Npb24iLCJmaWxlUGF0aCIsInRlc3QiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQWdCZ0JBLHdCQUF3QjtlQUF4QkE7O0lBRUFDLDBCQUEwQjtlQUExQkE7O0lBRUFDLDBCQUEwQjtlQUExQkE7O0lBRUFDLDRCQUE0QjtlQUE1QkE7O0lBRUFDLGtDQUFrQztlQUFsQ0E7O0lBRUFDLHNDQUFzQztlQUF0Q0E7O0lBRWhCLE9BT0U7ZUFQRjs7O0FBMUJBLElBQU1DLHdCQUF3QixrQ0FDeEJDLDBCQUEwQixxQ0FDMUJDLDBCQUEwQixrQ0FDMUJDLGtDQUFrQywyREFDbENDLHNDQUFzQyxtREFDdENDLDRCQUE0QixBQUFDLEdBQTJCSixPQUF6QkQsdUJBQXNCLEtBQThCRSxPQUEzQkQseUJBQXdCLEtBQThCRSxPQUEzQkQseUJBQXdCLEtBQXNDRSxPQUFuQ0QsaUNBQWdDLEtBQXVDLE9BQXBDQztBQUV2SixJQUFNRSxrQ0FBa0MsSUFBSUMsT0FBT1Asd0JBQzdDUSxvQ0FBb0MsSUFBSUQsT0FBT04sMEJBQy9DUSxvQ0FBb0MsSUFBSUYsT0FBT0wsMEJBQy9DUSxzQ0FBc0MsSUFBSUgsT0FBT0YsNEJBQ2pETSw0Q0FBNEMsSUFBSUosT0FBT0osa0NBQ3ZEUyxnREFBZ0QsSUFBSUwsT0FBT0g7QUFFMUQsU0FBU1YseUJBQXlCbUIsUUFBUSxFQUFFO0lBQUUsT0FBT1AsZ0NBQWdDUSxJQUFJLENBQUNEO0FBQVc7QUFFckcsU0FBU2xCLDJCQUEyQmtCLFFBQVEsRUFBRTtJQUFFLE9BQU9MLGtDQUFrQ00sSUFBSSxDQUFDRDtBQUFXO0FBRXpHLFNBQVNqQiwyQkFBMkJpQixRQUFRLEVBQUU7SUFBRSxPQUFPSixrQ0FBa0NLLElBQUksQ0FBQ0Q7QUFBVztBQUV6RyxTQUFTaEIsNkJBQTZCZ0IsUUFBUSxFQUFFO0lBQUUsT0FBT0gsb0NBQW9DSSxJQUFJLENBQUNEO0FBQVc7QUFFN0csU0FBU2YsbUNBQW1DZSxRQUFRLEVBQUU7SUFBRSxPQUFPRiwwQ0FBMENHLElBQUksQ0FBQ0Q7QUFBVztBQUV6SCxTQUFTZCx1Q0FBdUNjLFFBQVEsRUFBRTtJQUFFLE9BQU9ELDhDQUE4Q0UsSUFBSSxDQUFDRDtBQUFXO0lBRXhJLFdBQWU7SUFDYm5CLDBCQUFBQTtJQUNBQyw0QkFBQUE7SUFDQUMsNEJBQUFBO0lBQ0FDLDhCQUFBQTtJQUNBQyxvQ0FBQUE7SUFDQUMsd0NBQUFBO0FBQ0YifQ==